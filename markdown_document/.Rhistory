#Lägger till avståndsklass per resa
rvu_avs <- rvu %>%
filter(!is.na(avstand)&avstand>0) %>%
rename(Färdmedel = fardmedel.kat) %>%
select(respondentid,Färdmedel,avstand,Område,Område_kod)
rvu_avs$km <- round(rvu_avs$avstand/1000)
rvu_avs <- rvu_avs %>%
group_by(km = cut(km, breaks = c(2, 5, 10, 20,30,40)))
#rvu_avs$kmklass<-ifelse(rvu_avs$km>32/4,32,rvu_avs$km*4)
#rvu_avs$antal<-1
#Aggregerar avståndsklasser
agg_rvu_avs <-
aggregate(rvu_avs[,c('antal'), drop=FALSE], by=list(
avstand = rvu_avs$kmklass,
fard = rvu_avs$Färdmedel
),
FUN = sum)
rvu_avs <- rvu %>%
filter(!is.na(avstand)&avstand>0) %>%
rename(Färdmedel = fardmedel.kat) %>%
select(respondentid,Färdmedel,avstand,Område,Område_kod)
rvu_avs <- rvu %>%
filter(!is.na(avstand)&avstand>0) %>%
rename(Färdmedel = fardmedel.kat) %>%
select(respondentid,Färdmedel,avstand,Område,Område_kod)
rvu_avs$km <- round(rvu_avs$avstand/1000)
rvu_avs <- rvu_avs %>%
group_by(km = cut(km, breaks = c(2, 5, 10, 20,30,40)))
rvu_avs <- rvu %>%
filter(!is.na(avstand)&avstand>0) %>%
rename(Färdmedel = fardmedel.kat) %>%
select(respondentid,Färdmedel,avstand,Område,Område_kod)
rvu_avs$km <- round(rvu_avs$avstand/1000)
rvu_avs <- rvu_avs %>%
group_by(km = cut(km, breaks = c(2, 5, 10, 20,30,40,1000)))
rvu_avs <- rvu %>%
filter(!is.na(avstand)&avstand>0) %>%
rename(Färdmedel = fardmedel.kat) %>%
select(respondentid,Färdmedel,avstand,Område,Område_kod)
rvu_avs$km <- round(rvu_avs$avstand/1000)
rvu_avs <- rvu_avs %>%
group_by(km = cut(km, breaks = c(0,2, 5, 10, 20,30,40,1000)))
#Lägger till avståndsklass per resa
rvu_avs <- rvu %>%
filter(!is.na(avstand)&avstand>0) %>%
rename(Färdmedel = fardmedel.kat) %>%
select(respondentid,Färdmedel,avstand,Område,Område_kod)
rvu_avs$km <- round(rvu_avs$avstand/1000)
rvu_avs <- rvu_avs %>%
group_by(km = cut(km, breaks = c(0,2, 5, 10, 20,30,40,1000)))
#rvu_avs$kmklass<-ifelse(rvu_avs$km>32/4,32,rvu_avs$km*4)
rvu_avs$antal<-1
#Aggregerar avståndsklasser
agg_rvu_avs <-
aggregate(rvu_avs[,c('antal'), drop=FALSE], by=list(
avstand = rvu_avs$kmklass,
fard = rvu_avs$Färdmedel
),
FUN = sum)
#Lägger till avståndsklass per resa
rvu_avs <- rvu %>%
filter(!is.na(avstand)&avstand>0) %>%
rename(Färdmedel = fardmedel.kat) %>%
select(respondentid,Färdmedel,avstand,Område,Område_kod)
rvu_avs$km <- round(rvu_avs$avstand/1000)
rvu_avs <- rvu_avs %>%
group_by(kmklass = cut(km, breaks = c(0,2, 5, 10, 20,30,40,1000)))
#rvu_avs$kmklass<-ifelse(rvu_avs$km>32/4,32,rvu_avs$km*4)
rvu_avs$antal<-1
#Aggregerar avståndsklasser
agg_rvu_avs <-
aggregate(rvu_avs[,c('antal'), drop=FALSE], by=list(
avstand = rvu_avs$kmklass,
fard = rvu_avs$Färdmedel
),
FUN = sum)
agg_rvu_avs<-spread(agg_rvu_avs,key=fard,value=antal)
agg_rvu_avs[is.na(agg_rvu_avs)]<-0
agg_rvu_avs$Total<-agg_rvu_avs$Bil+agg_rvu_avs$Buss+agg_rvu_avs$Tåg+agg_rvu_avs$Cykel+agg_rvu_avs$Gång
agg_rvu_avs <- agg_rvu_avs[c("avstand","Bil","Tåg","Buss","Cykel","Gång","Total")]
#Skapar ett procentuellt stapeldiagram
temp_plot <- agg_rvu_avs %>%
mutate("Bil" = 100*Bil / Total,
"Tåg" = 100*Tåg / Total,
"Buss" =  100*Buss / Total,
"Cykel" = 100*Cykel / Total,
"Gång" = 100*Gång / Total) %>%
select(-Total) %>%
gather(Färdmedel,Andel,Bil:Gång,factor_key=TRUE) %>%
mutate(Andel=round(Andel))
avstand_plot <- ggplot(data = temp_plot, aes(fill =forcats::fct_rev(factor(Färdmedel)), y = Andel, x = factor(avstand),label =Andel)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(data=temp_plot[temp_plot$Andel>3,],size = 3, position = position_fill(vjust = 0.5)) + #etiketter
scale_fill_manual(values=palett[-(1:1)]) + #färger
labs(y="Andel",x="Avstånd (km)",fill="Färdmedel") +
scale_y_continuous(labels = scales::percent)
avstand_plot
agg_rvu_avs_hist <- agg_rvu_avs %>%
select(avstand,Total) %>%
mutate(avstand=as.factor(avstand))
agg_rvu_avs_histplot <- ggplot(agg_rvu_avs_hist, aes(avstand, Total, fill = avstand)) +
geom_bar(stat = "identity") +
rvu_theme() +
scale_fill_brewer(palette = "Set3") +
labs(
x = "Avstånd",
y = "Antal resor",
title = "Avståndsfördelning."
)
agg_rvu_avs_histplot
#Lägger till avståndsklass per resa
rvu_avs <- rvu %>%
filter(!is.na(avstand)&avstand>0) %>%
rename(Färdmedel = fardmedel.kat) %>%
select(respondentid,Färdmedel,avstand,Område,Område_kod)
rvu_avs$km <- round(rvu_avs$avstand/1000)
rvu_avs <- rvu_avs %>%
group_by(kmklass = cut(km, breaks = c(0,2, 5, 10, 20,30,40,50,1000)))
#rvu_avs$kmklass<-ifelse(rvu_avs$km>32/4,32,rvu_avs$km*4)
rvu_avs$antal<-1
#Aggregerar avståndsklasser
agg_rvu_avs <-
aggregate(rvu_avs[,c('antal'), drop=FALSE], by=list(
avstand = rvu_avs$kmklass,
fard = rvu_avs$Färdmedel
),
FUN = sum)
agg_rvu_avs<-spread(agg_rvu_avs,key=fard,value=antal)
agg_rvu_avs[is.na(agg_rvu_avs)]<-0
agg_rvu_avs$Total<-agg_rvu_avs$Bil+agg_rvu_avs$Buss+agg_rvu_avs$Tåg+agg_rvu_avs$Cykel+agg_rvu_avs$Gång
agg_rvu_avs <- agg_rvu_avs[c("avstand","Bil","Tåg","Buss","Cykel","Gång","Total")]
#Skapar ett procentuellt stapeldiagram
temp_plot <- agg_rvu_avs %>%
mutate("Bil" = 100*Bil / Total,
"Tåg" = 100*Tåg / Total,
"Buss" =  100*Buss / Total,
"Cykel" = 100*Cykel / Total,
"Gång" = 100*Gång / Total) %>%
select(-Total) %>%
gather(Färdmedel,Andel,Bil:Gång,factor_key=TRUE) %>%
mutate(Andel=round(Andel))
avstand_plot <- ggplot(data = temp_plot, aes(fill =forcats::fct_rev(factor(Färdmedel)), y = Andel, x = factor(avstand),label =Andel)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(data=temp_plot[temp_plot$Andel>3,],size = 3, position = position_fill(vjust = 0.5)) + #etiketter
scale_fill_manual(values=palett[-(1:1)]) + #färger
labs(y="Andel",x="Avstånd (km)",fill="Färdmedel") +
scale_y_continuous(labels = scales::percent)
avstand_plot
agg_rvu_avs_hist <- agg_rvu_avs %>%
select(avstand,Total) %>%
mutate(avstand=as.factor(avstand))
agg_rvu_avs_histplot <- ggplot(agg_rvu_avs_hist, aes(avstand, Total, fill = avstand)) +
geom_bar(stat = "identity") +
rvu_theme() +
scale_fill_brewer(palette = "Set3") +
labs(
x = "Avstånd",
y = "Antal resor",
title = "Avståndsfördelning."
)
agg_rvu_avs_histplot
View(agg_rvu_avs_hist)
agg_rvu_avs <-
aggregate(rvu_avs[,c('antal'), drop=FALSE], by=list(
avstand = rvu_avs$kmklass,
fard = rvu_avs$Färdmedel
),
FUN = sum)
agg_rvu_avs2 <- rvu_avs %>%
aggregate(antal, drop=FALSE, by=list(
avstand = kmklass,
fard = Färdmedel
),
FUN = sum)
agg_rvu_avs2 <- rvu_avs %>%
aggregate(antal)
agg_rvu_avs2 <- rvu_avs %>%
aggregate(antal)
agg_rvu_avs2 <- rvu_avs %>%
aggregate(antal,FUN = sum)
trip_age <- pers %>%
mutate(alder = ifelse(is.na(alder), "Ej angivet", alder)) %>%
select(respondentid, alder) %>%
left_join(mode_per_pers, by = c("respondentid" = "respondentid")) %>%
filter(!is.na(alder)) %>%
group_by(alder = cut(alder, breaks = c(12, 17, 24, 39, 64, 74, 85)))
View(trip_age)
rvu_avs <- rvu %>%
filter(!is.na(avstand)&avstand>0) %>%
rename(Färdmedel = fardmedel.kat) %>%
select(respondentid,Färdmedel,avstand,Område,Område_kod)
rvu_avs$km <- round(rvu_avs$avstand/1000)
rvu_avs <- rvu_avs %>%
group_by(kmklass = cut(km, breaks = c(0,2, 5, 10, 20,30,40,50,1000))) %>%
#rvu_avs$kmklass<-ifelse(rvu_avs$km>32/4,32,rvu_avs$km*4)
rvu_avs$antal<-1
#Lägger till avståndsklass per resa
rvu_avs <- rvu %>%
filter(!is.na(avstand)&avstand>0) %>%
rename(Färdmedel = fardmedel.kat) %>%
select(respondentid,Färdmedel,avstand,Område,Område_kod)
rvu_avs$km <- round(rvu_avs$avstand/1000)
rvu_avs <- rvu_avs %>%
group_by(kmklass = cut(km, breaks = c(0, 2, 5, 10, 25, 50, 1000))) %>%
mutate(alder = c(
"0-2",
"2-5",
"5-10",
"10-25",
"25-50",
"50+"
))
#Lägger till avståndsklass per resa
rvu_avs <- rvu %>%
filter(!is.na(avstand)&avstand>0) %>%
rename(Färdmedel = fardmedel.kat) %>%
select(respondentid,Färdmedel,avstand,Område,Område_kod)
rvu_avs$km <- round(rvu_avs$avstand/1000)
rvu_avs <- rvu_avs %>%
group_by(kmklass = cut(km, breaks = c(0, 2, 5, 10, 25, 50, 1000))) %>%
mutate(kmklass = c(
"0-2",
"2-5",
"5-10",
"10-25",
"25-50",
"50+"
))
rvu_avs <- rvu %>%
filter(!is.na(avstand)&avstand>0) %>%
rename(Färdmedel = fardmedel.kat) %>%
select(respondentid,Färdmedel,avstand,Område,Område_kod)
rvu_avs$km <- round(rvu_avs$avstand/1000)
rvu_avs <- rvu_avs %>%
group_by(kmklass = cut(km, breaks = c(0, 2, 5, 10, 25, 50, 1000)))
#rvu_avs$kmklass<-ifelse(rvu_avs$km>32/4,32,rvu_avs$km*4)
rvu_avs$antal<-1
#Aggregerar avståndsklasser
agg_rvu_avs <-
aggregate(rvu_avs[,c('antal'), drop=FALSE], by=list(
avstand = rvu_avs$kmklass,
fard = rvu_avs$Färdmedel
),
FUN = sum)
agg_rvu_avs<-spread(agg_rvu_avs,key=fard,value=antal)
agg_rvu_avs[is.na(agg_rvu_avs)]<-0
agg_rvu_avs$Total<-agg_rvu_avs$Bil+agg_rvu_avs$Buss+agg_rvu_avs$Tåg+agg_rvu_avs$Cykel+agg_rvu_avs$Gång
agg_rvu_avs <- agg_rvu_avs[c("avstand","Bil","Tåg","Buss","Cykel","Gång","Total")]
#Lägger till avståndsklass per resa
rvu_avs <- rvu %>%
filter(!is.na(avstand)&avstand>0) %>%
rename(Färdmedel = fardmedel.kat) %>%
select(respondentid,Färdmedel,avstand,Område,Område_kod)
rvu_avs$km <- round(rvu_avs$avstand/1000)
rvu_avs <- rvu_avs %>%
group_by(kmklass = cut(km, breaks = c(0, 2, 5, 10, 25, 50, 1000)))
#rvu_avs$kmklass<-ifelse(rvu_avs$km>32/4,32,rvu_avs$km*4)
rvu_avs$antal<-1
#Aggregerar avståndsklasser
agg_rvu_avs <-
aggregate(rvu_avs[,c('antal'), drop=FALSE], by=list(
avstand = rvu_avs$kmklass,
fard = rvu_avs$Färdmedel
),
FUN = sum)
agg_rvu_avs<-spread(agg_rvu_avs,key=fard,value=antal)
agg_rvu_avs[is.na(agg_rvu_avs)]<-0
agg_rvu_avs$Total<-agg_rvu_avs$Bil+agg_rvu_avs$Buss+agg_rvu_avs$Tåg+agg_rvu_avs$Cykel+agg_rvu_avs$Gång
agg_rvu_avs <- agg_rvu_avs[c("avstand","Bil","Tåg","Buss","Cykel","Gång","Total")]
agg_rvu_avs <- mutate(agg_rvu_avs,kmklass = c(
"0-2",
"2-5",
"5-10",
"10-25",
"25-50",
"50+"
))
#Skapar ett procentuellt stapeldiagram
temp_plot <- agg_rvu_avs %>%
mutate("Bil" = 100*Bil / Total,
"Tåg" = 100*Tåg / Total,
"Buss" =  100*Buss / Total,
"Cykel" = 100*Cykel / Total,
"Gång" = 100*Gång / Total) %>%
select(-Total) %>%
gather(Färdmedel,Andel,Bil:Gång,factor_key=TRUE) %>%
mutate(Andel=round(Andel))
avstand_plot <- ggplot(data = temp_plot, aes(fill =forcats::fct_rev(factor(Färdmedel)), y = Andel, x = factor(avstand),label =Andel)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(data=temp_plot[temp_plot$Andel>3,],size = 3, position = position_fill(vjust = 0.5)) + #etiketter
scale_fill_manual(values=palett[-(1:1)]) + #färger
labs(y="Andel",x="Avstånd (km)",fill="Färdmedel") +
scale_y_continuous(labels = scales::percent)
avstand_plot
agg_rvu_avs <- mutate(avstand,kmklass = c(
"0-2",
"2-5",
"5-10",
"10-25",
"25-50",
"50+"
))
#Lägger till avståndsklass per resa
rvu_avs <- rvu %>%
filter(!is.na(avstand)&avstand>0) %>%
rename(Färdmedel = fardmedel.kat) %>%
select(respondentid,Färdmedel,avstand,Område,Område_kod)
rvu_avs$km <- round(rvu_avs$avstand/1000)
rvu_avs <- rvu_avs %>%
group_by(kmklass = cut(km, breaks = c(0, 2, 5, 10, 25, 50, 1000)))
#rvu_avs$kmklass<-ifelse(rvu_avs$km>32/4,32,rvu_avs$km*4)
rvu_avs$antal<-1
#Aggregerar avståndsklasser
agg_rvu_avs <-
aggregate(rvu_avs[,c('antal'), drop=FALSE], by=list(
avstand = rvu_avs$kmklass,
fard = rvu_avs$Färdmedel
),
FUN = sum)
agg_rvu_avs<-spread(agg_rvu_avs,key=fard,value=antal)
agg_rvu_avs[is.na(agg_rvu_avs)]<-0
agg_rvu_avs$Total<-agg_rvu_avs$Bil+agg_rvu_avs$Buss+agg_rvu_avs$Tåg+agg_rvu_avs$Cykel+agg_rvu_avs$Gång
agg_rvu_avs <- agg_rvu_avs[c("avstand","Bil","Tåg","Buss","Cykel","Gång","Total")]
agg_rvu_avs <- mutate(agg_rvu_avs,avstand = c(
"0-2",
"2-5",
"5-10",
"10-25",
"25-50",
"50+"
))
#Skapar ett procentuellt stapeldiagram
temp_plot <- agg_rvu_avs %>%
mutate("Bil" = 100*Bil / Total,
"Tåg" = 100*Tåg / Total,
"Buss" =  100*Buss / Total,
"Cykel" = 100*Cykel / Total,
"Gång" = 100*Gång / Total) %>%
select(-Total) %>%
gather(Färdmedel,Andel,Bil:Gång,factor_key=TRUE) %>%
mutate(Andel=round(Andel))
avstand_plot <- ggplot(data = temp_plot, aes(fill =forcats::fct_rev(factor(Färdmedel)), y = Andel, x = factor(avstand),label =Andel)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(data=temp_plot[temp_plot$Andel>3,],size = 3, position = position_fill(vjust = 0.5)) + #etiketter
scale_fill_manual(values=palett[-(1:1)]) + #färger
labs(y="Andel",x="Avstånd (km)",fill="Färdmedel") +
scale_y_continuous(labels = scales::percent)
avstand_plot
agg_rvu_avs_hist <- agg_rvu_avs %>%
select(avstand,Total) %>%
mutate(avstand=as.factor(avstand))
agg_rvu_avs_histplot <- ggplot(agg_rvu_avs_hist, aes(avstand, Total, fill = avstand)) +
geom_bar(stat = "identity") +
rvu_theme() +
scale_fill_brewer(palette = "Set3") +
labs(
x = "Avstånd",
y = "Antal resor",
title = "Avståndsfördelning."
)
agg_rvu_avs_histplot
korkort_bil <- pers %>%
filter(!(is.na(h4) & is.na(h5)))
mutate(Område = ifelse(is.na(Område), "Ej angivet", Område)) %>%
select(Område, h4, h5) %>%
group_by(Område) %>%
summarize(korkort_bil = sum(na.omit(h4) == 1),
Biltillgång = sum(h5 == 1) + sum(h5 == 2) + sum(h5 == 3) + sum(h5 == 4),
Antal_individer = n()) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>%
mutate("Körkort (%)" = korkort_bil/Antal_individer*100,
"Biltillgång (%)" = Biltillgång/Antal_individer*100) %>%
select(Område, "Körkort (%)", "Biltillgång (%)")
korkort_bil <- pers %>%
#  filter(!(is.na(h4) & is.na(h5)))
mutate(Område = ifelse(is.na(Område), "Ej angivet", Område)) %>%
select(Område, h4, h5) %>%
group_by(Område) %>%
summarize(korkort_bil = sum(na.omit(h4) == 1),
Biltillgång = sum(h5 == 1) + sum(h5 == 2) + sum(h5 == 3) + sum(h5 == 4),
Antal_individer = n()) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>%
mutate("Körkort (%)" = korkort_bil/Antal_individer*100,
"Biltillgång (%)" = Biltillgång/Antal_individer*100) %>%
select(Område, "Körkort (%)", "Biltillgång (%)")
korkort_bil <- korkort_bil
körkort_totalt <- pull(korkort_bil[nrow(korkort_bil),"Körkort (%)"])
biltillgång_totalt <- pull(korkort_bil[nrow(korkort_bil),"Biltillgång (%)"])
körkort_min <- min(korkort_bil$"Körkort (%)")
#Försök att filtrera ut extremvärden för att kunna skriva om dem i texten.
korkort_bil_extremer_höga <- extremer_höga(korkort_bil,"Körkort (%)")
korkort_bil_extremer_låga <- extremer_låga(korkort_bil,"Körkort (%)")
##### Stycke som presenterar svarsgraden #####
text <- ""
max_antal_uppräknade <- 3 #hur många områden som maximalt ska lyftas fram
extremer <- korkort_bil_extremer_höga
if (nrow(extremer)>1){ #om det finns extremer
#slice(which.max(Svarsfrekvens))
text <- paste(text,"Särskilt högt var bilinnehavet bland människor i ")
#Uppräkning av områden
antal_uppräknade <- min(nrow(extremer),max_antal_uppräknade) #som minst räknas alla områden upp
text_uppräkning <- paste(extremer$Område[1:(antal_uppräknade)], collapse = ', ') #sträng med områden
text_uppräkning <- stri_replace_last_fixed(text_uppräkning, ', ', ' och ') #sätter "och" i slutet av uppräkningen
text <- paste(text,text_uppräkning,", där andelen var upp emot ",round(extremer$Svarsfrekvens[1])," %. ",sep="")
} else {
svarsgrad_max <- slice(svarsgrad,which.max(Svarsfrekvens))
text <- paste(text,"Högst bilinnehav återfanns i ",svarsgrad_max$Område,", med ",round(svarsgrad_max$Svarsfrekvens)," %. ",sep="")
}
extremer <- korkort_bil_extremer_låga
if (nrow(extremer)>1){ #om det finns extremer
#slice(which.max(Svarsfrekvens))
text <- paste(text,"Särskilt låg andel körkortsinnehavare återfanns i ")
#Uppräkning av områden
antal_uppräknade <- min(nrow(extremer),max_antal_uppräknade) #som minst räknas alla områden upp
text_uppräkning <- paste(extremer$Område[1:(antal_uppräknade)], collapse = ', ') #sträng med områden
text_uppräkning <- stri_replace_last_fixed(text_uppräkning, ', ', ' och ') #sätter "och" i slutet av uppräkningen
text <- paste(text,text_uppräkning,", där andelen var ner emot ",round(extremer$Svarsfrekvens[1])," %. ",sep="")
} else {
svarsgrad_min <- slice(svarsgrad,which.min(Svarsfrekvens))
text <- paste(text,"Lägst var bilinnehavet i ",svarsgrad_min$Område,", där andelen var nära ",round(svarsgrad_min$Svarsfrekvens)," %. ",sep="")
}
kbl(korkort_bil, caption = "Antal respondenter med körkort och biltillgång", booktabs = T, linesep = "",digits=0) %>%
kable_styling(latex_options = c("striped", "HOLD_position")) %>%
row_spec(nrow(korkort_bil), bold = T) %>% #gör Total-raden fetstilt
row_spec(0, bold = T) #gör rubrikraden fetstilt
kbl(korkort_bil, caption = "Antal respondenter med körkort och biltillgång", booktabs = T, linesep = "",digits=0) %>%
kable_styling(latex_options = c("striped", "HOLD_position")) %>%
row_spec(nrow(korkort_bil), bold = T) %>% #gör Total-raden fetstilt
row_spec(0, bold = T) #gör rubrikraden fetstilt
kbl(korkort_bil, caption = "Antal respondenter med körkort och biltillgång", booktabs = T, linesep = "",digits=0) %>%
kable_styling(latex_options = c("striped", "HOLD_position")) %>%
row_spec(nrow(korkort_bil), bold = T) %>% #gör Total-raden fetstilt
row_spec(0, bold = T)
korkort_bil <- pers %>%
filter(!(is.na(h4) & is.na(h5)))
mutate(Område = ifelse(is.na(Område), "Ej angivet", Område)) %>%
select(Område, h4, h5) %>%
group_by(Område) %>%
summarize(korkort_bil = sum(na.omit(h4) == 1),
Biltillgång = sum(h5 == 1) + sum(h5 == 2) + sum(h5 == 3) + sum(h5 == 4),
Antal_individer = n()) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>%
mutate("Körkort (%)" = korkort_bil/Antal_individer*100,
"Biltillgång (%)" = Biltillgång/Antal_individer*100) %>%
select(Område, "Körkort (%)", "Biltillgång (%)")
korkort_bil <- pers %>%
filter(!(is.na(h4) & is.na(h5))) %>%
mutate(Område = ifelse(is.na(Område), "Ej angivet", Område)) %>%
select(Område, h4, h5) %>%
group_by(Område) %>%
summarize(korkort_bil = sum(na.omit(h4) == 1),
Biltillgång = sum(h5 == 1) + sum(h5 == 2) + sum(h5 == 3) + sum(h5 == 4),
Antal_individer = n()) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>%
mutate("Körkort (%)" = korkort_bil/Antal_individer*100,
"Biltillgång (%)" = Biltillgång/Antal_individer*100) %>%
select(Område, "Körkort (%)", "Biltillgång (%)")
korkort_bil <- korkort_bil
körkort_totalt <- pull(korkort_bil[nrow(korkort_bil),"Körkort (%)"])
biltillgång_totalt <- pull(korkort_bil[nrow(korkort_bil),"Biltillgång (%)"])
körkort_min <- min(korkort_bil$"Körkort (%)")
kable(x, format.args = list( big.mark = " "))
library(knitr)
library(kableExtra)
#library(ggplot2) #kanske ta bort
library(tidyverse)
library(readxl)
library(bookdown)
library(pxweb)
library(scales)
library(stringi)
inline_hook<-function(x){
if(is.numeric(x)){
formatted<-format(x,big.mark = " ")
}
else{
formatted<-x
}
}
knit_hooks$set(inline = inline_hook)
#beräkna andel
temp_plot<-trip_sys_mode
colnames(temp_plot)[which(names(temp_plot) == "Annat")] <- "Övrigt"
temp_plot <- temp_plot %>%
mutate("Bil" = 100*Bil / Total,
"Tåg" = 100*Tåg / Total,
"Buss" =  100*Buss / Total,
"Cykel" = 100*Cykel / Total,
"Gång" = 100*Gång / Total,
"Övrigt" = 100*Övrigt / Total) %>%
select(-Total)
#skapa Percent stacked barchart
temp_plot<-temp_plot %>%
gather(Färdmedel,Andel,-Sysselsättning,factor_key=TRUE) %>%
mutate(Andel=round(Andel))
sys_plot <- ggplot(data = temp_plot, aes(fill =forcats::fct_rev(factor(Färdmedel)), x = Andel, y = forcats::fct_rev(factor(Sysselsättning)),label =Andel)) +
theme(panel.background = element_blank()) +
scale_y_discrete(limits = rev(unique(temp_plot$Sysselsättning))) + #Placerar ärendekategorierna i en bättre ordning
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label=ifelse(Andel>3,Andel," ")),size = 3, position = position_fill(vjust = 0.5)) + #etiketter
scale_fill_manual(values=palett) + #färger
labs(x="Andel",y="Sysselsättning",fill="Färdmedel") +
scale_x_continuous(labels = scales::percent)
sys_plot
