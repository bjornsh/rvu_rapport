max_2_inom <- rownames(od_matrix_plain)[max_2[1]]
#Skapar procent-matris och lägger på asterisker om det är ett för litet urval
od_matrix_perc <- mutate(od_matrix_andelar,across(where(is.numeric), ~percent(.x, accuracy = 1))) %>%
rename_with(~str_c(.,"*"), omraden_lagt_underlag$Omrade) %>%
rownames_to_column('Område') %>%
mutate(Område = ifelse(Område %in% omraden_lagt_underlag$Omrade,paste0(Område,"*"),Område)) %>%
`rownames<-`(.[,1]) %>% #skapar indexkolumn
select(!(Område))
#Räknar totalt antal resor inom området
antal_resor_tot <- nrow(rvu)
antal_resor_tot_filtrerade <- rvu %>%
filter(!is.na(start_rapportomrade_namn) & !is.na(stop_rapportomrade_namn)) %>%
nrow()
antal_resor_inom <- rvu %>%
filter(start_rapportomrade_namn %in% rapportomrade &
stop_rapportomrade_namn %in% rapportomrade) %>%
nrow()
respondenter <- pers %>%
mutate(Omrade = ifelse(is.na(Omrade), "Ej angivet", Omrade)) %>%
select(Omrade, Omrade_kod, kon, alder) %>%
group_by(Omrade) %>%
summarize(Respondenter = n(),
Man = sum(kon == "Man"),
Kvinnor = sum(kon == "Kvinna"),
"15-24 år" = sum(alder >= 15 & alder < 25),
"25-64 år" = sum(alder >= 25 & alder < 65),
"65-85 år" = sum(alder >= 65),
Omrade_kod = first(Omrade_kod)) %>%
left_join(select(scb_befolkning, c(Omrade_kod,Befolkning)), by = c("Omrade_kod" = "Omrade_kod")) %>% #Lägger till befolkning per zon
mutate(Befolkning = replace_na(Befolkning,0)) %>%
select(-one_of("Omrade_kod")) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt")))
respondenter_tabell <- respondenter %>%
select(!Befolkning) %>%
mutate(Omrade = ifelse(Omrade %in% omraden_lagt_underlag$Omrade,paste0(Omrade,"*"),Omrade)) %>%
rename(Område = Omrade)
svarsgrad <- respondenter %>%
filter(Omrade != "Ej angivet") %>%
#filter(Omrade != "Totalt") %>% #Först bör genomsnittlig andel svarande sparas
mutate(Svarsfrekvens = Respondenter/Befolkning*100) %>%
select(Omrade,Respondenter,Befolkning,Svarsfrekvens)
svarsgrad_tabell <- svarsgrad %>%
mutate("Andel av befolkningen (%)" = round(Svarsfrekvens*10)/10) %>%
select(!Svarsfrekvens) %>%
mutate(Omrade = ifelse(Omrade %in% omraden_lagt_underlag$Omrade,paste0(Omrade,"*"),Omrade)) %>%
rename(Område = Omrade)
svarsgrad_totalt <- pull(svarsgrad[nrow(svarsgrad),"Svarsfrekvens"])
#Försök att filtrera ut extremvärden för att kunna skriva om dem i texten.
svarsgrad_extremer_höga <- extremer_höga(svarsgrad,"Omrade","Svarsfrekvens")
svarsgrad_extremer_låga <- extremer_låga(svarsgrad,"Omrade","Svarsfrekvens")
##### Stycke som presenterar svarsgraden #####
text_andel_svarande <- paste("Andelen svarande av befolkningen (15 år och äldre) var i genomsnitt ",round(svarsgrad_totalt)," %. ")
max_antal_uppräknade <- 3 #hur många områden som maximalt ska lyftas fram
extremer <- svarsgrad_extremer_höga
if (nrow(extremer)>1){ #om det finns extremer
#slice(which.max(Svarsfrekvens))
text_andel_svarande <- paste(text_andel_svarande,"Särskilt hög var andelen svarande i ")
#Uppräkning av områden
text_uppräkning <- upprakning(rownames(extremer),max_antal_uppräknade)
text_andel_svarande <- paste(text_andel_svarande,text_uppräkning,", där andelen svarande var upp emot ",round(extremer$Svarsfrekvens[1])," %. ",sep="")
} else {
svarsgrad_max <- slice(svarsgrad,which.max(Svarsfrekvens))
text_andel_svarande <- paste(text_andel_svarande,"Högst andel svarande återfinns i ",svarsgrad_max$Omrade,", där andelen svarande var ",round(svarsgrad_max$Svarsfrekvens)," %. ",sep="")
}
extremer <- svarsgrad_extremer_låga
if (nrow(extremer)>1){ #om det finns extremer
#slice(which.max(Svarsfrekvens))
text_andel_svarande <- paste(text_andel_svarande,"Särskilt hög andel svarande återfinns i ")
#Uppräkning av områden
text_uppräkning <- upprakning(rownames(extremer),max_antal_uppräknade)
text_andel_svarande <- paste(text_andel_svarande,text_uppräkning,", där andelen svarande var upp emot ",round(extremer$Svarsfrekvens[1])," %. ",sep="")
} else {
svarsgrad_min <- slice(svarsgrad,which.min(Svarsfrekvens))
text_andel_svarande <- paste(text_andel_svarande,"Lägst andel svarande återfinns i ",svarsgrad_min$Omrade,", där andelen svarande var nära ",round(svarsgrad_min$Svarsfrekvens)," %. ",sep="")
}
#textvariabler till kommande textstycke
if (omradesniva == 'deso')
omradesniva_text <- 'DeSO-nivå'
if (omradesniva == 'tätort')
omradesniva_text <- 'tätorts'
if (omradesniva == 'kommun')
omradesniva_text <- 'kommun'
antal_individer <- nrow(pers)
respondenter_totalrad <- respondenter %>%
slice(nrow(respondenter)) %>%
select(is.numeric) %>%
select(-Befolkning,-Respondenter,-Man,-Kvinnor)
respondentgrupper_lagt_underlag <- as_tibble(cbind(nms = names(respondenter_totalrad), t(respondenter_totalrad))) %>%
transform(V2 = as.numeric(V2)) %>%
filter(as.numeric(V2)<lagt_underlag)
respondentgrupper_lagt_underlag_text <- upprakning(respondentgrupper_lagt_underlag$nms,nrow(respondentgrupper_lagt_underlag))
trip_mode_gender <- rvu %>%
left_join(select(pers, c("respondentid","kon")), by = c("respondentid" = "respondentid")) %>% #Hämtar könskolumn från pers-data
select(Omrade, Omrade_kod, kon, fardmedel.kat) %>%
filter(!is.na(fardmedel.kat)) %>%
group_by(kon,fardmedel.kat) %>%
summarize(antal = n()) %>%
spread(fardmedel.kat, antal, fill=0) %>%
mutate(Totalt = rowSums(across(where(is.numeric)))) %>%
#Räknar ut radsummor
ungroup() %>%
rename('Kön' = kon) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>% #Skapar totalrad
select("Kön",ordning_fardmedel,"Totalt") %>%
filter(Kön != "Okänt")
#Beräkna andel till diagram
trip_mode_gender_andel <- trip_mode_gender %>%
mutate(across(where(is.numeric), ~ . / Totalt)) %>% #dividerar till procent av respondenter
select(!Totalt)
#Skapar tabell med procent
trip_mode_gender_percent <- trip_mode_gender_andel %>%
mutate(across(where(is.numeric), ~percent(.x, accuracy = 1)))
#Skapar tabell uppräknat på befolkningen
trip_mode_gender_abs <- trip_mode_gender_andel %>%
mutate(Befolkning = (Kön == "Man")*sum(befolkning_per_område$Män) + (Kön == "Kvinna")*sum(befolkning_per_område$Kvinnor) +
(Kön == "Totalt")*(sum(befolkning_per_område$Kvinnor)+sum(befolkning_per_område$Män))) %>%
mutate(across(where(is.numeric) & !Befolkning, ~ round(. * Befolkning)),
Totalt = Befolkning) %>%
select(!Befolkning) %>%
filter(Kön != "Okänt")
#####Textproduktion#####
respondenter_tabell_df <- respondenter_tabell %>%
as.data.frame() %>%
`rownames<-`(.[,1]) %>% #skapar indexkolumn
select(!(Område))
andel_man <- respondenter_tabell_df["Totalt","Man"]/(respondenter_tabell_df["Totalt","Man"]+respondenter_tabell_df["Totalt","Kvinnor"])
andel_kvinnor <- respondenter_tabell_df["Totalt","Kvinnor"]/(respondenter_tabell_df["Totalt","Man"]+respondenter_tabell_df["Totalt","Kvinnor"])
trip_mode_gender_andel_df <- trip_mode_gender_andel %>%
as.data.frame() %>%
`rownames<-`(.[,1]) %>% #skapar indexkolumn
select(!(Kön))
toleransnivå <- .02 #hur stor avvikelse i procentenheter som krävs för att skillnaden ska vara nämnbar.
man_storst <- c()
kvinna_storst <- c()
lika_stora <- c()
avvikelse <- trip_mode_gender_andel_df["Kvinna","Bil"] - trip_mode_gender_andel_df["Man","Bil"]
if (avvikelse > toleransnivå) {
kvinna_storst <- append(kvinna_storst,"bil")
} else if (avvikelse < -toleransnivå) {
man_storst <- append(man_storst,"bil")
} else {
lika_stora <- append(lika_stora,"bil")
}
avvikelse <- (trip_mode_gender_andel_df["Kvinna","Tåg"]+trip_mode_gender_andel_df["Kvinna","Buss"]) -
(trip_mode_gender_andel_df["Man","Tåg"]+trip_mode_gender_andel_df["Man","Buss"])
if (avvikelse > toleransnivå) {
kvinna_storst <- append(kvinna_storst,"kollektivtrafik")
} else if (avvikelse < -toleransnivå) {
man_storst <- append(man_storst,"kollektivtrafik")
} else {
lika_stora <- append(lika_stora,"kollektivtrafik")
}
avvikelse <- trip_mode_gender_andel_df["Kvinna","Cykel"] - trip_mode_gender_andel_df["Man","Cykel"]
if (avvikelse > toleransnivå) {
kvinna_storst <- append(kvinna_storst,"cykel")
} else if (avvikelse < -toleransnivå) {
man_storst <- append(man_storst,"cykel")
} else {
lika_stora <- append(lika_stora,"cykel")
}
text_fardmedel_kon <- ""
if (length(man_storst) > 0) {
text_fardmedel_kon <- paste(text_fardmedel_kon,"Bland män står ",paste(man_storst, collapse = ' och '), " för en större del av resorna än bland kvinnor. ", sep = "")
}
if (length(kvinna_storst) > 0) {
text_fardmedel_kon <- paste(text_fardmedel_kon,"För kvinnor var ", ifelse((length(man_storst) > 0),"istället "," "),paste(kvinna_storst, collapse = ' och '), " vanligare än bland män. ", sep = "")
}
if (length(lika_stora) == 3) {
text_fardmedel_kon <- paste(text_fardmedel_kon,"Det fanns ingen märkbar skillnad på färdmedelsfördelningen för kvinnor respektive män. ", sep = "")
} else if (length(lika_stora) == 2) {
text_fardmedel_kon <- paste(text_fardmedel_kon,"I övrigt fanns ingen märkbar skillnad på färdmedelsfördelningen för kvinnor respektive män. ", sep = "")
}
num_trips_women <- num_trips_gender$`Antal resor`[num_trips_gender$Grupp=="Kvinna"]/num_trips_gender$`Befolkning`[num_trips_gender$Grupp=="Kvinna"]
num_trips_men <- num_trips_gender$`Antal resor`[num_trips_gender$Grupp=="Man"]/num_trips_gender$`Befolkning`[num_trips_gender$Grupp=="Man"]
share_car_men <- trip_mode_gender_andel_df["Man", "Bil"]
share_car_women <- trip_mode_gender_andel_df["Kvinna", "Bil"]
trip_mode_gender_andel_koll_df <- trip_mode_gender_andel_df %>% mutate(Kollektivtrafik = Buss + Tåg)
share_transit_women <-trip_mode_gender_andel_koll_df["Kvinna", "Kollektivtrafik"]*100
share_transit_men <-trip_mode_gender_andel_koll_df["Man", "Kollektivtrafik"]*100
share_bike_women <-trip_mode_gender_andel_koll_df["Kvinna", "Cykel"]*100
share_bike_men <-trip_mode_gender_andel_koll_df["Man", "Cykel"]*100
get_trip <- function(df, max_min, col_){
val_ <- NA
if(max_min == "min"){val_ <- df[which.min(df[[col_]]),]}
else{val_ <- df[which.max(df[[col_]]),]}
return(val_)
}
trip_age <- rvu %>%
left_join(select(pers, c("respondentid","alder")), by = c("respondentid" = "respondentid")) %>% #Hämtar ålderskolumn från pers-data
select(Omrade, Omrade_kod, alder, fardmedel.kat) %>%
filter(!is.na(fardmedel.kat)) %>%
group_by(alder = cut(alder, breaks = c(12, 17, 24, 39, 64, 74, 85)),fardmedel.kat) %>%
# left_join(select(scb_befolkning, c(Omrade_kod,Ålder_15_24,Ålder_25_64,Ålder_65)), by = c("Omrade_kod" = "Omrade_kod")) %>%
# group_by(Omrade,alder,fardmedel.kat) %>%
# summarize("Befolkning" = sum(Befolkning))
summarize(antal = n()) %>%
spread(fardmedel.kat, antal, fill=0) %>%
mutate(Totalt = rowSums(across(where(is.numeric)))) %>%
#Räknar ut radsummor
ungroup() %>%
mutate(alder = c(
"15-18 år",
"18-24 år",
"25-39 år",
"40-64 år",
"65-74 år",
"75-85 år"
)) %>%
rename('Ålder' = alder) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>% #Skapar totalrad
select("Ålder",ordning_fardmedel,"Totalt")
#Beräkna andel till diagram
trip_age_andel <- trip_age %>%
mutate(across(where(is.numeric), ~ . / Totalt)) %>% #dividerar till procent av respondenter
select(!Totalt)
max_bike_age <- get_trip(trip_age_andel, "max", "Cykel")
max_car_age <- get_trip(trip_age_andel, "max", "Bil")
max_bus_age <- get_trip(trip_age_andel, "max", "Buss")
korkort_bil <- pers %>%
# filter(!(is.na(h4) & !(is.na(h5)))) %>% #Körkort och bilinnehav bör göras som två separata... Detta är åtgärdat i den förlorade koden...
mutate(Omrade = ifelse(is.na(Omrade), "Ej angivet", Omrade)) %>%
select(Omrade, h4, h5) %>%
group_by(Omrade) %>%
summarize(korkort_bil = sum(na.omit(h4) == 1),
Biltillgång = sum(h5 == 1) + sum(h5 == 2) + sum(h5 == 3) + sum(h5 == 4),
Antal_individer_korkort_svar = sum(!is.na(h4)),
Antal_individer_bil_svar = sum(!is.na(h5))) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>%
mutate("Körkort (%)" = korkort_bil/Antal_individer_korkort_svar*100,
"Biltillgång (%)" = Biltillgång/Antal_individer_bil_svar*100) %>%
select(Omrade, "Körkort (%)", "Biltillgång (%)") %>%
rename(Område = Omrade)
korkort_bil_tabell <- korkort_bil %>%
mutate(Område = ifelse(Område %in% omraden_lagt_underlag$Omrade,paste0(Område,"*"),Område))
körkort_totalt <- pull(korkort_bil[nrow(korkort_bil),"Körkort (%)"])
biltillgång_totalt <- pull(korkort_bil[nrow(korkort_bil),"Biltillgång (%)"])
körkort_min <- min(korkort_bil$"Körkort (%)")
#Försök att filtrera ut extremvärden för att kunna skriva om dem i texten.
##### Stycke som presenterar körkortsinnehavet #####
text_korkort <- ""
max_antal_uppräknade <- 3 #hur många områden som maximalt ska lyftas fram
#Indata
tabell <- korkort_bil %>%
rename(col="Körkort (%)") #Den kolumn som extremer ska tas ifrån
extremer <- extremer_höga(tabell,"Område",col) #Extremer som ska behandlas
#Skapar text
if (nrow(extremer)>1){ #om det finns extremer
text_korkort <- paste(text_korkort,"Särskilt högt var körkortsinnehavet bland människor i ")
#Uppräkning av områden
text_uppräkning <- upprakning(rownames(extremer),max_antal_uppräknade)
text_korkort <- paste(text_korkort,text_uppräkning,", där andelen var upp emot ",round(extremer$col[1])," %. ",sep="")
} else {
max <- slice(tabell,which.max(col))
text_korkort <- paste(text_korkort,"Störst körkortsinnehav återfanns i ",max$Område,", med ",round(max$col)," %. ",sep="")
}
extremer <- extremer_låga(tabell,"Område",col) #Extremer som ska behandlas
if (nrow(extremer)>1){ #om det finns extremer
text_korkort <- paste(text_korkort,"Särskilt låg andel körkortsinnehavare återfanns i ")
#Uppräkning av områden
text_uppräkning <- upprakning(rownames(extremer),max_antal_uppräknade)
text_korkort <- paste(text_korkort,text_uppräkning,", där andelen var ner emot ",round(extremer$col[1])," %. ",sep="")
} else {
min <- slice(tabell,which.min(col))
text_korkort <- paste(text_korkort,"Lägst var andelen med körkort i ",min$Område,", där andelen var nära ",round(min$col)," %. ",sep="")
}
#####Textproduktion#####
#Hittar åldersgrupp med störst andel personer som rest
num_trips_age_df <- as.data.frame(num_trips_age)
rownames(num_trips_age_df) <- num_trips_age_df$"Grupp" #ställer in indexkolumn
maxgrupp_andel_rest <- num_trips_age_df[which.max(num_trips_age_df$`Andel personer som rest (%)`),1]
maxgrupp_andel_rest_varde <- max(num_trips_age_df$`Andel personer som rest (%)`)
num_trips_gender_df <- num_trips_gender %>%
as.data.frame() %>%
`rownames<-`(.[,1])  %>% #skapar indexkolumn
select(!(Grupp))
konjunktion <- ""
#Andel som rest
avvikelse <- (abs(1 - num_trips_gender_df["Man","Andel personer som rest (%)"] / num_trips_gender_df["Kvinna","Andel personer som rest (%)"]))
if (num_trips_gender_df["Man","Andel personer som rest (%)"] > num_trips_gender_df["Kvinna","Andel personer som rest (%)"]) {
kön1a <- "män"
kön2a <- "kvinnor"
} else {
kön1a <- "kvinnor"
kön2a <- "män"
}
if (avvikelse > 0.8) {
text_kon <- paste("Andelen som rest bland ",kön1a," är högre än bland ",kön2a,". ",sep="")
konjunktion <- "dock"
konjunktion2 <- "dessutom"
} else {
text_kon <- paste("Andelen som rest bland ",kön1a," och ",kön2a," var i samma storleksordning. ",sep="")
konjunktion <- "dessutom"
konjunktion2 <- "dock"
}
#Resor per dag och person (enbart de som rest)
avvikelse <- abs((num_trips_gender_df["Man","Resor per dag och person (enbart de som rest)"]-num_trips_gender_df["Kvinna","Resor per dag och person (enbart de som rest)"])/(num_trips_gender_df["Kvinna","Resor per dag och person (enbart de som rest)"]+num_trips_gender_df["Man","Resor per dag och person (enbart de som rest)"]))
if (num_trips_gender_df["Man","Resor per dag och person (enbart de som rest)"] > num_trips_gender_df["Kvinna","Resor per dag och person (enbart de som rest)"]) {
kön1b <- "män"
kön2b <- "kvinnor"
} else {
kön1b <- "kvinnor"
kön2b <- "män"
}
ifelse(kön1a!=kön1b,konjunktion2 <- "däremot")
if (avvikelse>0.032) {
text_kon <- paste(text_kon, "Bland de som reser var ",konjunktion2," antalet resor per dag större bland ",kön1b," än bland ",kön2b,". ",sep="")
} else {
text_kon <- paste(text_kon, "Bland de som reser var ",konjunktion," antalet resor per dag snarlikt mellan ",kön1b," och ",kön2b,". ",sep="")
konjunktion <- "heller "
}
svarsnyckel <- labels_data %>%
filter(question_id=="H2") %>%
select(answer_id,answer)
svarsnyckel <- labels_data %>%
filter(question_id=="H2") %>%
select(answer_id,answer)
trip_sys_mode <- rvu %>%
left_join(select(pers, c("respondentid","h2")), by = c("respondentid" = "respondentid")) %>% #Hämtar kolumn h2 från pers-data %>%
select(Omrade, Omrade_kod, h2, fardmedel.kat) %>%
filter(!is.na(fardmedel.kat)) %>%
left_join(svarsnyckel, by = c("h2" = "answer_id")) %>%
group_by(answer,fardmedel.kat) %>%
summarize(antal = n()) %>%
spread(fardmedel.kat,antal, fill=0) %>%
mutate(Totalt = rowSums(across(where(is.numeric)))) %>%
ungroup() %>%
rename("Sysselsättning" = answer) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~"Totalt"))) %>% #Skapar totalrad
select("Sysselsättning",ordning_fardmedel,"Totalt") %>%
filter(Sysselsättning != "Vet ej/Vill ej svara")
sys_lagt_underlag <- filter(trip_sys_mode,Totalt < lagt_underlag)
#Ändrar ordningen på raderna för att få Annat sist
trip_sys_mode <- trip_sys_mode %>%
filter(!(Sysselsättning %in% c("Annat","Totalt"))) %>%
bind_rows(filter(trip_sys_mode,Sysselsättning == "Annat")) %>%
bind_rows(filter(trip_sys_mode,Sysselsättning == "Totalt"))
#Skapar dataframe till textuttag
# trip_sys_mode_df <- trip_sys_mode %>%
#   as.data.frame() %>%
#   `rownames<-`(.[,1])  %>% #skapar indexkolumn
#   select(!(Sysselsättning))
#Beräkna andel
trip_sys_mode_andel <- trip_sys_mode %>%
mutate(across(where(is.numeric), ~ . / Totalt)) %>% #dividerar till procent av respondenter
select(!Totalt)
#Beräkna andel till diagram
trip_sys_mode_andel_plot <- trip_sys_mode_andel %>%
mutate(Sysselsättning = ifelse(Sysselsättning %in% sys_lagt_underlag$Sysselsättning,paste0(Sysselsättning,"*"),Sysselsättning))
#Denna information används i texten nedan, samt i Detaljerade tabeller i bilagor
sys_omrade <- rvu %>%
left_join(select(pers, c("respondentid","h2")), by = c("respondentid" = "respondentid")) %>% #Hämtar kolumn h2 från pers-data %>%
select(Omrade, Omrade_kod, h2, fardmedel.kat) %>%
filter(!is.na(fardmedel.kat)) %>%
left_join(svarsnyckel, by = c("h2" = "answer_id")) %>%
left_join(select(scb_befolkning, c(Omrade_kod,Befolkning)), by = c("Omrade_kod" = "Omrade_kod")) %>%
group_by(Omrade,answer) %>%
summarize(antal = n(),
"Befolkning" = first(Befolkning)) %>%
spread(answer,antal, fill=0) %>%
mutate(Totalt = rowSums(across(where(is.numeric)))-Befolkning) %>%
#Räknar ut radsummor
ungroup() %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>% #Skapar totalrad
mutate(across(where(is.numeric) & !Befolkning, ~ . / Totalt)) %>% #dividerar till procent av respondenter
select(!Totalt) %>%
rename(Område = Omrade)
sys_omrade_totalt <- sys_omrade %>%
filter(Område == "Totalt")
sys_omrade_percent <- sys_omrade %>%
select(!Befolkning) %>%
mutate(across(where(is.numeric), ~percent(.x, accuracy = 1))) %>%
mutate(Område = ifelse(Område %in% omraden_lagt_underlag$Omrade,paste0(Område,"*"),Område))
sys_omrade_abs <- sys_omrade %>%
mutate(across(where(is.numeric) & !Befolkning, ~ round(. * Befolkning)),
Totalt = Befolkning) %>%
select(!Befolkning) %>%
mutate(Område = ifelse(Område %in% omraden_lagt_underlag$Omrade,paste0(Område,"*"),Område))
#Transformerar till dataframe
trip_sys_mode_df <- trip_sys_mode_andel %>%
as.data.frame() %>%
`rownames<-`(.[,1])  %>% #skapar indexkolumn
select(!(Sysselsättning)) %>%
mutate(Kollektivtrafik = Buss + Tåg)
#Räknar ut vanligaste färdmedlet i respektive område
trip_sys_mode_max <- trip_sys_mode_df %>%
mutate('max' = names(trip_sys_mode_df)[max.col(trip_sys_mode_df, "first")])
#Plockar ut det vanligaste färdmedlet totalt sett
mest_frekvent_fardmedel <- trip_sys_mode_max["Totalt","max"]
#Plockar ut det vanligaste färdmedlets andelar
mest_frekvent_andel <- trip_sys_mode_max["Totalt",mest_frekvent_fardmedel]
#Skapar en lista med områden som har ett avvikande vanligaste färdmedel
avvikande_vanligaste_färdmedel <- trip_sys_mode_max %>%
filter(max != mest_frekvent_fardmedel)
#Räknar ut det näst vanligaste färdmedlet i respektive område
trip_sys_mode_max <- trip_sys_mode_max %>%
mutate('max2' = names(select(trip_sys_mode_df,-mest_frekvent_fardmedel))[max.col(select(trip_sys_mode_df,-mest_frekvent_fardmedel), "first")])
#Plockar ut det näst vanligaste färdmedlet totalt sett
nast_mest_frekvent_fardmedel <- trip_sys_mode_max["Totalt","max2"]
#Plockar ut det näst vanligaste färdmedlets andelar
nast_mest_frekvent_andel <- trip_sys_mode_max["Totalt",nast_mest_frekvent_fardmedel]
mest_bil_syss <- rownames(trip_sys_mode_df)[which.max(trip_sys_mode_df$Bil)]
mest_koll_syss <- rownames(trip_sys_mode_df)[which.max(trip_sys_mode_df$Kollektivtrafik)]
mest_cykel_syss <- rownames(trip_sys_mode_df)[which.max(trip_sys_mode_df$Cykel)]
minst_bil_syss <- rownames(trip_sys_mode_df)[which.min(trip_sys_mode_df$Bil)]
minst_koll_syss <- rownames(trip_sys_mode_df)[which.min(trip_sys_mode_df$Kollektivtrafik)]
minst_cykel_syss <- rownames(trip_sys_mode_df)[which.min(trip_sys_mode_df$Cykel)]
svarsnyckel_arende <- labels_data %>%
filter(question_id=="B2_R1") %>%
select(answer_id,answer)
rvu_purp <- rvu %>%
select(resa_nr, respondentid, b2) %>%
left_join(svarsnyckel_arende, by = c("b2" = "answer_id")) %>%
group_by(answer) %>%
summarise(antal = n())
top_purpose <- rvu_purp %>% filter(!is.na(answer)) %>% arrange(desc(antal)) %>% filter(row_number()==1)
top_purpose_2 <- rvu_purp %>% filter(!is.na(answer)) %>% arrange(desc(antal)) %>% filter(row_number()==2)
top_purpose <- top_purpose$answer
top_purpose_2 <- top_purpose_2$answer
rvu_purp_rep <- rvu_purp %>%
rename(
'Ärende' = answer,
'Antal svar' = antal
)
#Skapar tabell färdmedel per ärende
trip_purpose_mode <- rvu %>%
select(b2, fardmedel.kat) %>%
filter(!is.na(fardmedel.kat)) %>%
left_join(svarsnyckel_arende, by = c("b2" = "answer_id")) %>%
group_by(answer,fardmedel.kat) %>%
summarize(antal = n()) %>%
spread(fardmedel.kat,antal, fill=0) %>%
mutate(Totalt = rowSums(across(where(is.numeric)))) %>%
ungroup() %>%
rename("Ärende" = answer) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~"Totalt"))) %>% #Skapar totalrad
select("Ärende",ordning_fardmedel,"Totalt") %>%
filter(Ärende != "Vet ej/Vill ej svara")
#Ändrar ordningen på raderna för att få Annat ärende sist
trip_purpose_mode <- trip_purpose_mode %>%
filter(!(Ärende %in% c("Annat ärende","Totalt"))) %>%
bind_rows(filter(trip_purpose_mode,Ärende == "Annat ärende")) %>%
bind_rows(filter(trip_purpose_mode,Ärende == "Totalt"))
trip_purpose_mode_andel <- trip_purpose_mode %>%
mutate(across(where(is.numeric), ~ . / Totalt)) %>% #dividerar till procent av respondenter
select(!Totalt)
purp_lagt_underlag <- filter(trip_purpose_mode,Totalt < lagt_underlag)
#Beräkna andel till diagram
trip_purpose_mode_andel_plot <- trip_purpose_mode_andel %>%
mutate(Ärende = ifelse(Ärende %in% purp_lagt_underlag$Ärende,paste0(Ärende,"*"),Ärende))
trip_purpose_mode_df <- trip_purpose_mode %>%
as.data.frame() %>%
`rownames<-`(.[,1])  %>% #skapar indexkolumn
select(!(Ärende))
trip_purpose_mode_andel_df <- trip_purpose_mode_andel %>%
filter(Ärende!="Totalt") %>%
as.data.frame() %>%
`rownames<-`(.[,1])  %>% #skapar indexkolumn
select(!(Ärende)) %>%
mutate(Kollektivtrafik = Buss + Tåg)
trip_purpose_mode_koll_df <- trip_purpose_mode_df[-nrow(trip_purpose_mode_df),] %>% # skapar df med koll = buss + tåg
#filter(Bil!="Totalt") %>%
as.data.frame() %>%
#`rownames<-`(.[,1]) %>% #skapar indexkolumn
select(!(Totalt)) %>%
mutate(Kollektivtrafik = Buss + Tåg) %>%
select(!(Buss)) %>%
select(!(Tåg))
trip_purpose_mode_andel_koll <- trip_purpose_mode_koll_df %>% # skapar df med färdmedelsandel per ärende)
mutate(across(where(is.numeric), ~ . / rowSums(trip_purpose_mode_koll_df)))*100 #dividerar till procent av respondenter
trip_purpose_errand_share_mode <- trip_purpose_mode_koll_df %>% # ärendeandel per färdmeel
mutate_if(is.numeric, funs(./sum(.)*100))
trips_total_shares_errand <- trip_purpose_mode_df %>% select(Totalt)/trip_purpose_mode_df$Totalt[trip_purpose_mode$Ärende=="Totalt"]*100 # resor per ärende som procent av totalt antal resos
car_share_work <- round(trip_purpose_mode_andel_koll["Arbete (till jobbet)", "Bil"], digits = 1) # andel bilresor av arbetsresor
transit_share_work <- round(trip_purpose_mode_andel_koll["Arbete (till jobbet)", "Kollektivtrafik"], digits = 1) # andel kollresor av arbetsresor
bike_share_work <- round(trip_purpose_mode_andel_koll["Arbete (till jobbet)", "Cykel"], digits = 1) # andel cykelresor av arbetsresor
trips_to_work_share <- trips_total_shares_errand["Arbete (till jobbet)","Totalt"] # andel arbetsresor
trips_to_home_share <- trips_total_shares_errand["Hemresa/till bostaden","Totalt"] # andel resor till hemmet
mest_bil_syfte <- rownames(trip_purpose_mode_andel_df)[which.max(trip_purpose_mode_andel_df$Bil)]
mest_bil_syfte_andel <- max(trip_purpose_mode_andel_df$Bil)
minst_bil_syfte <- rownames(trip_purpose_mode_andel_df)[which.min(trip_purpose_mode_andel_df$Bil)]
minst_bil_syfte_andel <- min(trip_purpose_mode_andel_df$Bil)
istallet_for_bil <- ifelse(trip_purpose_mode_andel_df[minst_bil_syfte,"Kollektivtrafik"] > trip_purpose_mode_andel_df[minst_bil_syfte,"Cykel"],"Kollektivtrafik","Cykel")
istallet_for_bil_andel <- trip_purpose_mode_andel_df[minst_bil_syfte,istallet_for_bil]
#Histogram med resandefrekvens
resor_barplot <- ggplot(resor_per_individ_summa, aes(factor(Färdmedel, level = ordning_fardmedel), Perc_resor, fill = factor(Färdmedel, level = ordning_fardmedel))) +
geom_bar(stat = "identity") +
rvu_theme() +
coord_cartesian(xlim = c(1,nrow(resor_per_individ_summa))) +
scale_fill_manual(values=rev(palett)) +
scale_y_continuous(labels = scales::percent) +
geom_text(aes(label=percent(Perc_resor, 2)),size = 3, position=position_dodge(width=0.9), vjust=-0.25) + #etiketter
# scale_fill_discrete(breaks=ordning_fardmedel) +
labs(
x = "Färdmedel",
y = "Andel resor",
title = "Andel resor per färdmedel"
)
resor_barplot
