bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>%
top_n(minsta_antal) %>%
arrange(desc(Totalt[1:4]))
minsta_antal <- 10
#Skapar od-matris för alla resor
od_matrix <- rvu %>%
filter(start_tatort_namn == rapportområde & stop_tatort_namn == rapportområde) %>%
select(start_deso, stop_deso) %>%
filter(!is.na(start_deso)) %>%
filter(!is.na(stop_deso)) %>%
group_by(start_deso, stop_deso) %>%
summarize(antal = n()) %>%
pivot_wider(names_from = stop_deso, values_from = antal, values_fill = 0) %>%
ungroup()
# #Sparar OD-matris som csv
# write.csv(od_matrix, "od_matrix.csv")
#Filtrerar ut populäraste områden på rader samt skapar total och övriga områden
od_matrix <- od_matrix %>%
mutate("Totalt" = rowSums(select_if(., is.numeric), na.rm = TRUE)) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>%
top_n(minsta_antal) %>%
arrange(desc(Totalt[4]))
od_matrix <- od_matrix %>%
mutate("Totalt" = rowSums(select_if(., is.numeric), na.rm = TRUE)) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>%
top_n(minsta_antal) %>%
arrange(desc(Totalt[4,5]))
od_matrix <- od_matrix %>%
mutate("Totalt" = rowSums(select_if(., is.numeric), na.rm = TRUE)) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>%
top_n(minsta_antal) %>%
arrange(desc(Totalt[4:5]))
od_matrix <- od_matrix %>%
mutate("Totalt" = rowSums(select_if(., is.numeric), na.rm = TRUE)) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>%
top_n(minsta_antal) %>%
arrange(desc(Totalt))
od_matrix <- rbind(od_matrix[1:minsta_antal-1,],od_matrix[1,])
minsta_antal <- 10
#Skapar od-matris för alla resor
od_matrix <- rvu %>%
filter(start_tatort_namn == rapportområde & stop_tatort_namn == rapportområde) %>%
select(start_deso, stop_deso) %>%
filter(!is.na(start_deso)) %>%
filter(!is.na(stop_deso)) %>%
group_by(start_deso, stop_deso) %>%
summarize(antal = n()) %>%
pivot_wider(names_from = stop_deso, values_from = antal, values_fill = 0) %>%
ungroup()
# #Sparar OD-matris som csv
# write.csv(od_matrix, "od_matrix.csv")
#Filtrerar ut populäraste områden på rader samt skapar total och övriga områden
od_matrix <- od_matrix %>%
mutate("Totalt" = rowSums(select_if(., is.numeric), na.rm = TRUE)) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>%
top_n(minsta_antal) %>%
arrange(desc(Totalt))
od_matrix <- rbind(od_matrix[2:minsta_antal-1,],od_matrix[1,])
od_matrix <- rvu %>%
filter(start_tatort_namn == rapportområde & stop_tatort_namn == rapportområde) %>%
select(start_deso, stop_deso) %>%
filter(!is.na(start_deso)) %>%
filter(!is.na(stop_deso)) %>%
group_by(start_deso, stop_deso) %>%
summarize(antal = n()) %>%
pivot_wider(names_from = stop_deso, values_from = antal, values_fill = 0) %>%
ungroup()
# #Sparar OD-matris som csv
# write.csv(od_matrix, "od_matrix.csv")
#Filtrerar ut populäraste områden på rader samt skapar total och övriga områden
od_matrix <- od_matrix %>%
arrange(desc(Totalt)) %>%
mutate("Totalt" = rowSums(select_if(., is.numeric), na.rm = TRUE)) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>%
top_n(minsta_antal)
minsta_antal <- 10
#Skapar od-matris för alla resor
od_matrix <- rvu %>%
filter(start_tatort_namn == rapportområde & stop_tatort_namn == rapportområde) %>%
select(start_deso, stop_deso) %>%
filter(!is.na(start_deso)) %>%
filter(!is.na(stop_deso)) %>%
group_by(start_deso, stop_deso) %>%
summarize(antal = n()) %>%
pivot_wider(names_from = stop_deso, values_from = antal, values_fill = 0) %>%
ungroup()
# #Sparar OD-matris som csv
# write.csv(od_matrix, "od_matrix.csv")
#Filtrerar ut populäraste områden på rader samt skapar total och övriga områden
od_matrix <- od_matrix%>%
mutate("Totalt" = rowSums(select_if(., is.numeric), na.rm = TRUE)) %>%
arrange(desc(Totalt))  %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>%
top_n(minsta_antal)
minsta_antal <- 10
#Skapar od-matris för alla resor
od_matrix <- rvu %>%
filter(start_tatort_namn == rapportområde & stop_tatort_namn == rapportområde) %>%
select(start_deso, stop_deso) %>%
filter(!is.na(start_deso)) %>%
filter(!is.na(stop_deso)) %>%
group_by(start_deso, stop_deso) %>%
summarize(antal = n()) %>%
pivot_wider(names_from = stop_deso, values_from = antal, values_fill = 0) %>%
ungroup()
# #Sparar OD-matris som csv
# write.csv(od_matrix, "od_matrix.csv")
#Filtrerar ut populäraste områden på rader samt skapar total och övriga områden
od_matrix <- od_matrix%>%
mutate("Totalt" = rowSums(select_if(., is.numeric), na.rm = TRUE)) %>%
arrange(desc(Totalt))  %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>%
top_n(minsta_antal)
#Filtrerar bort kolumner
lista_med_tätorter <- pull(od_matrix,start_deso)
od_matrix <- od_matrix %>%
select(start_deso,lista_med_tätorter[1:minsta_antal-1],Totalt) %>%
rename("Från tärort" = start_deso)
#Skapar procent-matris
od_matrix_perc <- as.data.frame(od_matrix) #konverterar till dataframe
rownames(od_matrix_perc) <- od_matrix_perc$"Från tärort" #Skapar indexkolumn
od_matrix_perc <- select(od_matrix_perc,!c("Från tärort")) #Tar bort gammal kolumn
od_matrix_perc <- rbind(od_matrix_perc[1:minsta_antal-1,])
od_matrix_perc <- round(od_matrix_perc/od_matrix_perc["Totalt","Totalt"]*100)
minsta_antal <- 10
#Skapar od-matris för alla resor
od_matrix <- rvu %>%
select(start_tatort_namn, stop_tatort_namn) %>%
filter(!is.na(start_tatort_namn)) %>%
filter(!is.na(stop_tatort_namn)) %>%
filter(!(start_tatort_namn == rapportområde & stop_tatort_namn == rapportområde)) %>%
group_by(start_tatort_namn, stop_tatort_namn) %>%
summarize(antal = n()) %>%
pivot_wider(names_from = stop_tatort_namn, values_from = antal, values_fill = 0) %>%
ungroup()
# #Sparar OD-matris som csv
# write.csv(od_matrix, "od_matrix.csv")
#Filtrerar ut populäraste områden på rader samt skapar total och övriga områden
od_matrix <- od_matrix %>%
mutate("Totalt" = rowSums(select_if(., is.numeric), na.rm = TRUE)) %>%
arrange(desc(Totalt)) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>%
top_n(minsta_antal) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Övriga områden")))
#Skapar övrigt-rad
od_matrix_övriga  <- 2*od_matrix[minsta_antal, -1]- od_matrix[minsta_antal+1,-1]
od_matrix_övriga <- mutate(od_matrix_övriga,start_tatort_namn="Övriga områden")
od_matrix <- rbind(od_matrix[1:minsta_antal-1,],od_matrix_övriga,od_matrix[minsta_antal,])
#Filtrerar bort kolumner
lista_med_tätorter <- pull(od_matrix,start_tatort_namn)
od_matrix <- od_matrix %>%
select(start_tatort_namn,lista_med_tätorter[1:minsta_antal-1],Totalt) %>%
rename("Från tärort" = start_tatort_namn) %>%
mutate("Övriga områden" = -rowSums(select_if(., is.numeric), na.rm = TRUE)+2*Totalt) %>%
relocate(Totalt, .after = "Övriga områden")
#Skapar procent-matris
od_matrix_perc <- as.data.frame(od_matrix)
rownames(od_matrix_perc) <- od_matrix_perc$"Från tärort"
od_matrix_perc <- select(od_matrix_perc,!c("Från tärort"))
od_matrix_perc <- rbind(od_matrix_perc[0:minsta_antal+1,])
od_matrix_perc <- round(od_matrix_perc/od_matrix_perc["Totalt","Totalt"]*100)
sys <- labels_data %>%
filter(question_id=="H2") %>%
select(answer_id,answer)
View(sys)
rvu_sys <- rvu %>%
select(resa_nr, respondentid, h2) %>%
left_join(sys, by = c("h2" = "answer_id")) %>%
group_by(answer) %>%
summarise(antal = n())
rvu_sys <- rvu %>%
select(resa_nr, respondentid, H2) %>%
left_join(sys, by = c("h2" = "answer_id")) %>%
group_by(answer) %>%
summarise(antal = n())
View(rvu)
View(pers)
rvu_sys <- pers %>%
select(resa_nr, respondentid, H2) %>%
left_join(sys, by = c("h2" = "answer_id")) %>%
group_by(answer) %>%
summarise(antal = n())
rvu_sys <- pers %>%
select(resa_nr, respondentid, h2) %>%
left_join(sys, by = c("h2" = "answer_id")) %>%
group_by(answer) %>%
summarise(antal = n())
rvu_sys <- pers %>%
select(respondentid, h2) %>%
left_join(sys, by = c("h2" = "answer_id")) %>%
group_by(answer) %>%
summarise(antal = n())
View(rvu_sys)
rvu_sys <- pers %>%
select(respondentid, h2) %>%
left_join(sys, by = c("h2" = "answer_id"))
rvu_sys <- rvu %>%
left_join(pers$h2)
rvu_sys <- rvu %>%
left_join(pers$h2, by = c("respondentid" = "respondentid"))
rvu_sys <- rvu %>%
left_join(pers, by = c("respondentid" = "respondentid"))
View(rvu_sys)
rvu_sys <- rvu %>%
left_join(pers[respondentid,h2], by = c("respondentid" = "respondentid"))
rvu_sys <- rvu %>%
left_join(pers["respondentid","h2"], by = c("respondentid" = "respondentid"))
rvu_sys <- rvu %>%
left_join(pers$c("respondentid","h2"), by = c("respondentid" = "respondentid"))
rvu_sys <- rvu
rvu_sys <- rvu %>%
left_join(pers$c("respondentid","h2"), by = c("respondentid" = "respondentid"))
rvu_sys <- rvu %>%
left_join(select(pers, c("respondentid","h2")), by = c("respondentid" = "respondentid"))
sys <- labels_data %>%
filter(question_id=="H2") %>%
select(answer_id,answer)
rvu_sys <- rvu %>%
left_join(select(pers, c("respondentid","h2")), by = c("respondentid" = "respondentid"))
select(resa_nr, respondentid, h2) %>%
left_join(sys, by = c("h2" = "answer_id")) %>%
group_by(answer) %>%
summarise(antal = n())
purposes <- labels_data %>%
filter(question_id=="B2_R1") %>%
select(answer_id,answer)
rvu_purp <- rvu %>%
select(resa_nr, respondentid, b2)
sys <- labels_data %>%
filter(question_id=="H2") %>%
select(answer_id,answer)
rvu_sys <- rvu %>%
left_join(select(pers, c("respondentid","h2")), by = c("respondentid" = "respondentid")) %>%
select(resa_nr, respondentid, h2) %>%
left_join(sys, by = c("h2" = "answer_id")) %>%
group_by(answer) %>%
summarise(antal = n())
sys <- labels_data %>%
filter(question_id=="H2") %>%
select(answer_id,answer)
#Läser in fråga H2 om färdsätt och aggregerar
rvu_sys <- rvu %>%
left_join(select(pers, c("respondentid","h2")), by = c("respondentid" = "respondentid")) %>% #Hämtar kolumn h2 från pers-data
select(resa_nr, respondentid, h2) %>%
left_join(sys, by = c("h2" = "answer_id")) %>%
group_by(answer) %>%
summarise(antal = n())
top_sys <- rvu_sys %>% filter(!is.na(answer)) %>% arrange(desc(antal)) %>% filter(row_number()==1)
top_sys_2 <- rvu_sys %>% filter(!is.na(answer)) %>% arrange(desc(antal)) %>% filter(row_number()==2)
top_sys <- top_sys$answer
top_sys_2 <- top_sys_2$answer
rvu_sys_rep <- rvu_sys %>%
rename(
'Sysselsättning' = answer,
'Antal svar' = antal
)
trip_sys_mode <- rvu %>%
select(b2, fardmedel.kat) %>%
filter(!is.na(fardmedel.kat)) %>%
left_join(purposes, by = c("h2" = "answer_id")) %>%
group_by(answer) %>%
summarise("Bil" = sum(fardmedel.kat == "Bil", na.rm = TRUE),
"Tåg" = sum(fardmedel.kat == "Tåg", na.rm = TRUE),
"Buss" = sum(fardmedel.kat == "Buss", na.rm = TRUE),
"Cykel" = sum(fardmedel.kat == "Cykel", na.rm = TRUE),
"Gång" = sum(fardmedel.kat == "Gång", na.rm = TRUE),
"Annat" = sum(fardmedel.kat == "Annat", na.rm = TRUE),
"Total" = n()) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~"Total"))) %>%
rename("Sysselsättning" = answer)
trip_sys_mode <- rvu %>%
left_join(select(pers, c("respondentid","h2")), by = c("respondentid" = "respondentid")) %>% #Hämtar kolumn h2 från pers-data %>%
select(h2, fardmedel.kat) %>%
filter(!is.na(fardmedel.kat)) %>%
left_join(purposes, by = c("h2" = "answer_id")) %>%
group_by(answer) %>%
summarise("Bil" = sum(fardmedel.kat == "Bil", na.rm = TRUE),
"Tåg" = sum(fardmedel.kat == "Tåg", na.rm = TRUE),
"Buss" = sum(fardmedel.kat == "Buss", na.rm = TRUE),
"Cykel" = sum(fardmedel.kat == "Cykel", na.rm = TRUE),
"Gång" = sum(fardmedel.kat == "Gång", na.rm = TRUE),
"Annat" = sum(fardmedel.kat == "Annat", na.rm = TRUE),
"Total" = n()) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~"Total"))) %>%
rename("Sysselsättning" = answer)
trip_sys_mode <- rvu %>%
left_join(select(pers, c("respondentid","h2")), by = c("respondentid" = "respondentid")) %>% #Hämtar kolumn h2 från pers-data %>%
select(h2, fardmedel.kat) %>%
filter(!is.na(fardmedel.kat)) %>%
left_join(purposes, by = c("h2" = "answer_id")) %>%
group_by(answer) %>%
summarise("Bil" = sum(fardmedel.kat == "Bil", na.rm = TRUE),
"Tåg" = sum(fardmedel.kat == "Tåg", na.rm = TRUE),
"Buss" = sum(fardmedel.kat == "Buss", na.rm = TRUE),
"Cykel" = sum(fardmedel.kat == "Cykel", na.rm = TRUE),
"Gång" = sum(fardmedel.kat == "Gång", na.rm = TRUE),
"Annat" = sum(fardmedel.kat == "Annat", na.rm = TRUE),
"Total" = n()) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~"Total"))) %>%
rename("Sysselsättning" = answer)
#beräkna andel
temp_plot<-trip_sys_mode
colnames(temp_plot)[which(names(temp_plot) == "Annat")] <- "Övrigt"
temp_plot <- temp_plot %>%
mutate("Bil" = 100*Bil / Total,
"Tåg" = 100*Tåg / Total,
"Buss" =  100*Buss / Total,
"Cykel" = 100*Cykel / Total,
"Gång" = 100*Gång / Total,
"Övrigt" = 100*Övrigt / Total) %>%
select(-Total)
#skapa Percent stacked barchart
temp_plot<-temp_plot %>%
gather(Färdmedel,Andel,-Ärende,factor_key=TRUE) %>%
mutate(Andel=round(Andel))
#beräkna andel
temp_plot<-trip_sys_mode
colnames(temp_plot)[which(names(temp_plot) == "Annat")] <- "Övrigt"
temp_plot <- temp_plot %>%
mutate("Bil" = 100*Bil / Total,
"Tåg" = 100*Tåg / Total,
"Buss" =  100*Buss / Total,
"Cykel" = 100*Cykel / Total,
"Gång" = 100*Gång / Total,
"Övrigt" = 100*Övrigt / Total) %>%
select(-Total)
#skapa Percent stacked barchart
temp_plot<-temp_plot %>%
gather(Färdmedel,Andel,-Sysselsättning,factor_key=TRUE) %>%
mutate(Andel=round(Andel))
purpose_plot <- ggplot(data = temp_plot, aes(fill =forcats::fct_rev(factor(Färdmedel)), x = Andel, y = forcats::fct_rev(factor(Sysselsättning)),label =Andel)) +
scale_y_discrete(limits = rev(unique(temp_plot$Sysselsättning))) + #Placerar ärendekategorierna i en bättre ordning
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label=ifelse(Andel>3,Andel," ")),size = 3, position = position_fill(vjust = 0.5)) + #etiketter
scale_fill_manual(values=palett) + #färger
labs(x="Andel",y="Sysselsättning",fill="Färdmedel") +
scale_x_continuous(labels = scales::percent)
purpose_plot
temp_plot<-trip_sys_mode
colnames(temp_plot)[which(names(temp_plot) == "Annat")] <- "Övrigt"
temp_plot <- temp_plot %>%
mutate("Bil" = 100*Bil / Total,
"Tåg" = 100*Tåg / Total,
"Buss" =  100*Buss / Total,
"Cykel" = 100*Cykel / Total,
"Gång" = 100*Gång / Total,
"Övrigt" = 100*Övrigt / Total) %>%
select(-Total)
View(temp_plot)
trip_sys_mode <- rvu %>%
left_join(select(pers, c("respondentid","h2")), by = c("respondentid" = "respondentid")) %>% #Hämtar kolumn h2 från pers-data %>%
select(h2, fardmedel.kat) %>%
filter(!is.na(fardmedel.kat)) %>%
left_join(purposes, by = c("h2" = "answer_id")) %>%
group_by(answer) %>%
summarise("Bil" = sum(fardmedel.kat == "Bil", na.rm = TRUE),
"Tåg" = sum(fardmedel.kat == "Tåg", na.rm = TRUE),
"Buss" = sum(fardmedel.kat == "Buss", na.rm = TRUE),
"Cykel" = sum(fardmedel.kat == "Cykel", na.rm = TRUE),
"Gång" = sum(fardmedel.kat == "Gång", na.rm = TRUE),
"Annat" = sum(fardmedel.kat == "Annat", na.rm = TRUE),
"Total" = n()) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~"Total"))) %>%
rename("Sysselsättning" = answer)
View(trip_sys_mode)
trip_sys_mode <- rvu %>%
left_join(select(pers, c("respondentid","h2")), by = c("respondentid" = "respondentid")) %>% #Hämtar kolumn h2 från pers-data %>%
select(h2, fardmedel.kat) %>%
filter(!is.na(fardmedel.kat)) %>%
left_join(purposes, by = c("h2" = "answer_id")) %>%
group_by(answer)
rvu_sys <- rvu %>%
left_join(select(pers, c("respondentid","h2")), by = c("respondentid" = "respondentid")) %>% #Hämtar kolumn h2 från pers-data
select(resa_nr, respondentid, h2) %>%
left_join(sys, by = c("h2" = "answer_id")) %>%
group_by(answer) %>%
summarise(antal = n())
trip_sys_mode <- rvu %>%
left_join(select(pers, c("respondentid","h2")), by = c("respondentid" = "respondentid")) %>% #Hämtar kolumn h2 från pers-data %>%
select(h2, fardmedel.kat) %>%
filter(!is.na(fardmedel.kat)) %>%
left_join(sys, by = c("h2" = "answer_id")) %>%
group_by(answer) %>%
summarise("Bil" = sum(fardmedel.kat == "Bil", na.rm = TRUE),
"Tåg" = sum(fardmedel.kat == "Tåg", na.rm = TRUE),
"Buss" = sum(fardmedel.kat == "Buss", na.rm = TRUE),
"Cykel" = sum(fardmedel.kat == "Cykel", na.rm = TRUE),
"Gång" = sum(fardmedel.kat == "Gång", na.rm = TRUE),
"Annat" = sum(fardmedel.kat == "Annat", na.rm = TRUE),
"Total" = n()) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~"Total"))) %>%
rename("Sysselsättning" = answer)
View(sys)
svarsnyckel <- labels_data %>%
filter(question_id=="H2") %>%
select(answer_id,answer)
#Läser in fråga H2 om färdsätt och aggregerar
rvu_sys <- rvu %>%
left_join(select(pers, c("respondentid","h2")), by = c("respondentid" = "respondentid")) %>% #Hämtar kolumn h2 från pers-data
select(resa_nr, respondentid, h2) %>%
left_join(svarsnyckel, by = c("h2" = "answer_id")) %>%
group_by(answer) %>%
summarise(antal = n())
top_sys <- rvu_sys %>% filter(!is.na(answer)) %>% arrange(desc(antal)) %>% filter(row_number()==1)
top_sys_2 <- rvu_sys %>% filter(!is.na(answer)) %>% arrange(desc(antal)) %>% filter(row_number()==2)
top_sys <- top_sys$answer
top_sys_2 <- top_sys_2$answer
rvu_sys_rep <- rvu_sys %>%
rename(
'Sysselsättning' = answer,
'Antal svar' = antal
)
trip_sys_mode <- rvu %>%
left_join(select(pers, c("respondentid","h2")), by = c("respondentid" = "respondentid")) %>% #Hämtar kolumn h2 från pers-data %>%
select(h2, fardmedel.kat) %>%
filter(!is.na(fardmedel.kat)) %>%
left_join(svarsnyckel, by = c("h2" = "answer_id")) %>%
group_by(answer) %>%
summarise("Bil" = sum(fardmedel.kat == "Bil", na.rm = TRUE),
"Tåg" = sum(fardmedel.kat == "Tåg", na.rm = TRUE),
"Buss" = sum(fardmedel.kat == "Buss", na.rm = TRUE),
"Cykel" = sum(fardmedel.kat == "Cykel", na.rm = TRUE),
"Gång" = sum(fardmedel.kat == "Gång", na.rm = TRUE),
"Annat" = sum(fardmedel.kat == "Annat", na.rm = TRUE),
"Total" = n()) %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~"Total"))) %>%
rename("Sysselsättning" = answer)
#beräkna andel
temp_plot<-trip_sys_mode
colnames(temp_plot)[which(names(temp_plot) == "Annat")] <- "Övrigt"
temp_plot <- temp_plot %>%
mutate("Bil" = 100*Bil / Total,
"Tåg" = 100*Tåg / Total,
"Buss" =  100*Buss / Total,
"Cykel" = 100*Cykel / Total,
"Gång" = 100*Gång / Total,
"Övrigt" = 100*Övrigt / Total) %>%
select(-Total)
#skapa Percent stacked barchart
temp_plot<-temp_plot %>%
gather(Färdmedel,Andel,-Sysselsättning,factor_key=TRUE) %>%
mutate(Andel=round(Andel))
purpose_plot <- ggplot(data = temp_plot, aes(fill =forcats::fct_rev(factor(Färdmedel)), x = Andel, y = forcats::fct_rev(factor(Sysselsättning)),label =Andel)) +
scale_y_discrete(limits = rev(unique(temp_plot$Sysselsättning))) + #Placerar ärendekategorierna i en bättre ordning
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label=ifelse(Andel>3,Andel," ")),size = 3, position = position_fill(vjust = 0.5)) + #etiketter
scale_fill_manual(values=palett) + #färger
labs(x="Andel",y="Sysselsättning",fill="Färdmedel") +
scale_x_continuous(labels = scales::percent)
purpose_plot
#beräkna andel
temp_plot<-trip_sys_mode
colnames(temp_plot)[which(names(temp_plot) == "Annat")] <- "Övrigt"
temp_plot <- temp_plot %>%
mutate("Bil" = 100*Bil / Total,
"Tåg" = 100*Tåg / Total,
"Buss" =  100*Buss / Total,
"Cykel" = 100*Cykel / Total,
"Gång" = 100*Gång / Total,
"Övrigt" = 100*Övrigt / Total) %>%
select(-Total)
#skapa Percent stacked barchart
temp_plot<-temp_plot %>%
gather(Färdmedel,Andel,-Sysselsättning,factor_key=TRUE) %>%
mutate(Andel=round(Andel))
sys_plot <- ggplot(data = temp_plot, aes(fill =forcats::fct_rev(factor(Färdmedel)), x = Andel, y = forcats::fct_rev(factor(Sysselsättning)),label =Andel)) +
scale_y_discrete(limits = rev(unique(temp_plot$Sysselsättning))) + #Placerar ärendekategorierna i en bättre ordning
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label=ifelse(Andel>3,Andel," ")),size = 3, position = position_fill(vjust = 0.5)) + #etiketter
scale_fill_manual(values=palett) + #färger
labs(x="Andel",y="Sysselsättning",fill="Färdmedel") +
scale_x_continuous(labels = scales::percent)
sys_plot
kable(trip_sys_mode, caption = "Resärende per färdmedel", booktabs = T, linesep = "") %>%
kable_styling(latex_options = c("striped", "HOLD_position")) %>%
row_spec(nrow(trip_sys_mode), bold = T) %>% #gör Total-raden fetstilt
row_spec(0, bold = T) #gör rubrikraden fetstilt)
kable(rvu_purp_rep, caption = "Resärenden")
