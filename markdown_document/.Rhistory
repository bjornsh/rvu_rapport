arrange(Månad_no) %>%
select(-Månad_no)
View(resp_over_tid)
resp_over_tid
resp_over_tid[1]
resp_over_tid[,1]
slice(resp_over_tid,1)
slice(resp_over_tid,1:2)
slice(resp_over_tid,(1:2))
slice_head(resp_over_tid,1)
slice_head(resp_over_tid,n=1)
resp_over_tid
slice_head(resp_over_tid)
slice_head(resp_over_tid,n=5)
slice_head(resp_over_tid,n=5)
slice_head(resp_over_tid,prop = 3)
slice(resp_over_tid,1:3)
resp_over_tid <- pers %>%
select(respondentid, ar.manad) %>%
mutate(År = str_sub(ar.manad, 1, 4),
Månad_no = str_sub(ar.manad, 5, 6)) %>%
mutate(
Månad = recode(Månad_no,
'01' = "Januari",
'02' = "Februari",
'03' = "Mars",
'04' = "April",
'05' = "Maj",
'06' = "Juni",
'07' = "Juli",
'08' = "Augusti",
'09' = "September",
'10' = "Oktober",
'11' = "November",
'12' = "December")
) %>%
group_by(År, Månad, Månad_no) %>%
summarise('Antal respondenter' = n()) %>%
arrange(Månad_no) %>%
select(-Månad_no) %>%
ungroup()
slice_head(resp_over_tid,prop = 3)
slice_head(resp_over_tid,n = 3)
slice(resp_over_tid,1)
slice(resp_over_tid,1)$År
fran <- paste(slice(resp_over_tid,1)$Månad,slice(resp_over_tid,1)$År)
fran
fran <- paste(slice(resp_over_tid,1)$Månad,slice(resp_over_tid,1)$År)
till <- paste(slice(resp_over_tid,nrow(resp_over_tid))$Månad,slice(resp_over_tid,nrow(resp_over_tid))$År)
till
kable(resp_over_tid, caption = "Antal respondenter per månad under enkätundersökningens period.", booktabs = T, linesep = "",format.args = list( big.mark = " ")) %>%
kable_styling(latex_options = c("striped", "HOLD_position")) %>%
row_spec(0, bold = T) #gör rubrikraden fetstilt)
#####Textproduktion#####
respondenter_tabell_df <- respondenter_tabell %>%
as.data.frame() %>%
`rownames<-`(.[,1]) %>% #skapar indexkolumn
select(!(Område))
andel_man <- respondenter_tabell_df["Totalt","Man"]/(respondenter_tabell_df["Totalt","Man"]+respondenter_tabell_df["Totalt","Kvinnor"])
andel_kvinnor <- respondenter_tabell_df["Totalt","Kvinnor"]/(respondenter_tabell_df["Totalt","Man"]+respondenter_tabell_df["Totalt","Kvinnor"])
trip_mode_gender_andel_df <- trip_mode_gender_andel %>%
as.data.frame() %>%
`rownames<-`(.[,1]) %>% #skapar indexkolumn
select(!(Kön))%>%
mutate(Kollektivtrafik = Buss + Tåg)
toleransnivå <- .02 #hur stor avvikelse i procentenheter som krävs för att skillnaden ska vara nämnbar.
man_storst <- c()
kvinna_storst <- c()
lika_stora <- c()
avvikelse <- trip_mode_gender_andel_df["Kvinna","Bil"] - trip_mode_gender_andel_df["Man","Bil"]
if (avvikelse > toleransnivå) {
kvinna_storst <- append(kvinna_storst,"Bil")
} else if (avvikelse < -toleransnivå) {
man_storst <- append(man_storst,"Bil")
} else {
lika_stora <- append(lika_stora,"Bil")
}
avvikelse <- (trip_mode_gender_andel_df["Kvinna","Tåg"]+trip_mode_gender_andel_df["Kvinna","Buss"]) -
(trip_mode_gender_andel_df["Man","Tåg"]+trip_mode_gender_andel_df["Man","Buss"])
if (avvikelse > toleransnivå) {
kvinna_storst <- append(kvinna_storst,"Kollektivtrafik")
} else if (avvikelse < -toleransnivå) {
man_storst <- append(man_storst,"Kollektivtrafik")
} else {
lika_stora <- append(lika_stora,"Kollektivtrafik")
}
avvikelse <- trip_mode_gender_andel_df["Kvinna","Cykel"] - trip_mode_gender_andel_df["Man","Cykel"]
if (avvikelse > toleransnivå) {
kvinna_storst <- append(kvinna_storst,"Cykel")
} else if (avvikelse < -toleransnivå) {
man_storst <- append(man_storst,"Cykel")
} else {
lika_stora <- append(lika_stora,"Cykel")
}
text_fardmedel_kon <- ""
if (length(man_storst) > 0) {
text_fardmedel_kon <- paste(text_fardmedel_kon,"Bland män stod ",paste(tolower(man_storst), collapse = ' och '), " för en större del av resorna än bland kvinnor. ", sep = "")
}
if (length(kvinna_storst) > 0) {
text_fardmedel_kon <- paste(text_fardmedel_kon,"För kvinnor var ", ifelse((length(man_storst) > 0),"istället "," "),paste(tolower(kvinna_storst), collapse = ' och '), " vanligare än bland män. ", sep = "")
}
if (length(lika_stora) == 3) {
text_fardmedel_kon <- paste(text_fardmedel_kon,"Det fanns ingen märkbar skillnad på färdmedelsfördelningen för kvinnor respektive män. ", sep = "")
} else if (length(lika_stora) == 2) {
text_fardmedel_kon <- paste(text_fardmedel_kon,"I övrigt fanns ingen märkbar skillnad på färdmedelsfördelningen för kvinnor respektive män. ", sep = "")
}
man_storst_andel <- trip_mode_gender_andel_df["Man",man_storst]
kvinna_storst_andel <- trip_mode_gender_andel_df["Kvinna",kvinna_storst]
text_fardmedel_kon_sammanfattning <- ""
if (length(man_storst) > 0) {
text_fardmedel_kon_sammanfattning <- paste(text_fardmedel_kon_sammanfattning,"Bland män stod ",paste(tolower(man_storst), collapse = ' och '), " för en större del av resorna (",round(man_storst_andel*100)," %) än bland kvinnor. ", sep = "")
}
if (length(kvinna_storst) > 0) {
text_fardmedel_kon_sammanfattning <- paste(text_fardmedel_kon_sammanfattning,"För kvinnor var ", ifelse((length(man_storst) > 0),"istället "," "),paste(tolower(kvinna_storst), collapse = ' och '), " vanligare än bland män ",paste(round(kvinna_storst_andel*100), collapse = ' % respektive ')," %).", sep = "")
}
if (length(lika_stora) == 3) {
text_fardmedel_kon_sammanfattning <- paste(text_fardmedel_kon_sammanfattning,"Det fanns ingen märkbar skillnad på färdmedelsfördelningen för kvinnor respektive män. ", sep = "")
} else if (length(lika_stora) == 2) {
text_fardmedel_kon_sammanfattning <- paste(text_fardmedel_kon_sammanfattning,"I övrigt fanns ingen märkbar skillnad på färdmedelsfördelningen för kvinnor respektive män. ", sep = "")
}
text_fardmedel_kon_sammanfattning
#####Textproduktion#####
respondenter_tabell_df <- respondenter_tabell %>%
as.data.frame() %>%
`rownames<-`(.[,1]) %>% #skapar indexkolumn
select(!(Område))
andel_man <- respondenter_tabell_df["Totalt","Man"]/(respondenter_tabell_df["Totalt","Man"]+respondenter_tabell_df["Totalt","Kvinnor"])
andel_kvinnor <- respondenter_tabell_df["Totalt","Kvinnor"]/(respondenter_tabell_df["Totalt","Man"]+respondenter_tabell_df["Totalt","Kvinnor"])
trip_mode_gender_andel_df <- trip_mode_gender_andel %>%
as.data.frame() %>%
`rownames<-`(.[,1]) %>% #skapar indexkolumn
select(!(Kön))%>%
mutate(Kollektivtrafik = Buss + Tåg)
toleransnivå <- .02 #hur stor avvikelse i procentenheter som krävs för att skillnaden ska vara nämnbar.
man_storst <- c()
kvinna_storst <- c()
lika_stora <- c()
avvikelse <- trip_mode_gender_andel_df["Kvinna","Bil"] - trip_mode_gender_andel_df["Man","Bil"]
if (avvikelse > toleransnivå) {
kvinna_storst <- append(kvinna_storst,"Bil")
} else if (avvikelse < -toleransnivå) {
man_storst <- append(man_storst,"Bil")
} else {
lika_stora <- append(lika_stora,"Bil")
}
avvikelse <- (trip_mode_gender_andel_df["Kvinna","Tåg"]+trip_mode_gender_andel_df["Kvinna","Buss"]) -
(trip_mode_gender_andel_df["Man","Tåg"]+trip_mode_gender_andel_df["Man","Buss"])
if (avvikelse > toleransnivå) {
kvinna_storst <- append(kvinna_storst,"Kollektivtrafik")
} else if (avvikelse < -toleransnivå) {
man_storst <- append(man_storst,"Kollektivtrafik")
} else {
lika_stora <- append(lika_stora,"Kollektivtrafik")
}
avvikelse <- trip_mode_gender_andel_df["Kvinna","Cykel"] - trip_mode_gender_andel_df["Man","Cykel"]
if (avvikelse > toleransnivå) {
kvinna_storst <- append(kvinna_storst,"Cykel")
} else if (avvikelse < -toleransnivå) {
man_storst <- append(man_storst,"Cykel")
} else {
lika_stora <- append(lika_stora,"Cykel")
}
text_fardmedel_kon <- ""
if (length(man_storst) > 0) {
text_fardmedel_kon <- paste(text_fardmedel_kon,"Bland män stod ",paste(tolower(man_storst), collapse = ' och '), " för en större del av resorna än bland kvinnor. ", sep = "")
}
if (length(kvinna_storst) > 0) {
text_fardmedel_kon <- paste(text_fardmedel_kon,"För kvinnor var ", ifelse((length(man_storst) > 0),"istället "," "),paste(tolower(kvinna_storst), collapse = ' och '), " vanligare än bland män. ", sep = "")
}
if (length(lika_stora) == 3) {
text_fardmedel_kon <- paste(text_fardmedel_kon,"Det fanns ingen märkbar skillnad på färdmedelsfördelningen för kvinnor respektive män. ", sep = "")
} else if (length(lika_stora) == 2) {
text_fardmedel_kon <- paste(text_fardmedel_kon,"I övrigt fanns ingen märkbar skillnad på färdmedelsfördelningen för kvinnor respektive män. ", sep = "")
}
man_storst_andel <- trip_mode_gender_andel_df["Man",man_storst]
kvinna_storst_andel <- trip_mode_gender_andel_df["Kvinna",kvinna_storst]
text_fardmedel_kon_sammanfattning <- ""
if (length(man_storst) > 0) {
text_fardmedel_kon_sammanfattning <- paste(text_fardmedel_kon_sammanfattning,"Bland män stod ",paste(tolower(man_storst), collapse = ' och '), " för en större del av resorna (",round(man_storst_andel*100)," %) än bland kvinnor. ", sep = "")
}
if (length(kvinna_storst) > 0) {
text_fardmedel_kon_sammanfattning <- paste(text_fardmedel_kon_sammanfattning,"För kvinnor var ", ifelse((length(man_storst) > 0),"istället "," "),paste(tolower(kvinna_storst), collapse = ' och '), " vanligare än bland män (",paste(round(kvinna_storst_andel*100), collapse = ' % respektive ')," %).", sep = "")
}
if (length(lika_stora) == 3) {
text_fardmedel_kon_sammanfattning <- paste(text_fardmedel_kon_sammanfattning,"Det fanns ingen märkbar skillnad på färdmedelsfördelningen för kvinnor respektive män. ", sep = "")
} else if (length(lika_stora) == 2) {
text_fardmedel_kon_sammanfattning <- paste(text_fardmedel_kon_sammanfattning,"I övrigt fanns ingen märkbar skillnad på färdmedelsfördelningen för kvinnor respektive män. ", sep = "")
}
text_fardmedel_kon_sammanfattning
slice_head(resp_over_tid,prop = 3)
resp_over_tid <- pers %>%
select(respondentid, ar.manad) %>%
mutate(År = str_sub(ar.manad, 1, 4),
Månad_no = str_sub(ar.manad, 5, 6)) %>%
mutate(
Månad = recode(Månad_no,
'01' = "Januari",
'02' = "Februari",
'03' = "Mars",
'04' = "April",
'05' = "Maj",
'06' = "Juni",
'07' = "Juli",
'08' = "Augusti",
'09' = "September",
'10' = "Oktober",
'11' = "November",
'12' = "December")
) %>%
group_by(År, Månad, Månad_no) %>%
summarise('Antal respondenter' = n()) %>%
arrange(Månad_no) %>%
select(-Månad_no) %>%
ungroup()
fran <- paste(slice(resp_over_tid,1)$Månad,slice(resp_over_tid,1)$År)
till <- paste(slice(resp_over_tid,nrow(resp_over_tid))$Månad,slice(resp_over_tid,nrow(resp_over_tid))$År)
#Plockar fram befolkning per åldersgrupp i områdena
# befolkning_per_område <- rvu %>%
#   filter(!is.na(fardmedel.kat)) %>%
#   group_by(Omrade_kod) %>%
#   summarise(Omrade_kod = first(Omrade_kod)) %>%
#   left_join(select(scb_befolkning, c(Omrade_kod,Ålder_15_19,Ålder_20_24,Ålder_25_39,Ålder_40_64,Ålder_65_74,Ålder_75)), by = c("Omrade_kod" = "Omrade_kod"))
#Samlar befolkningssumma per ålder i området
befolkning_per_alder <- befolkning_per_område %>%
ungroup() %>%
bind_rows(summarize(.,
across(where(is.numeric), sum),
across(where(is.character), ~ "Totalt"))) %>%
filter(Omrade == "Totalt") %>%
select(starts_with("Ålder"),"Befolkning")
#Sätter ut asterisker om lågt underlag
alder_lagt_underlag <- filter(trip_age,Totalt < lagt_underlag)
trip_age_andel_plot <- trip_age_andel %>%
mutate(Ålder = ifelse(Ålder %in% alder_lagt_underlag$Ålder,paste0(Ålder,"*"),Ålder))
#Skapar tabell med procent
trip_age_percent <- trip_age_andel_plot %>%
mutate(across(where(is.numeric), ~percent(.x, accuracy = 1)))
#Skapar tabell uppräknat på befolkningen
trip_age_abs <- trip_age_andel_plot %>%
mutate(Befolkning = as.numeric(c(befolkning_per_alder))) %>%
mutate(across(where(is.numeric) & !Befolkning, ~ round(. * Befolkning)),
Totalt = Befolkning) %>%
select(!Befolkning)
#skapa Percent stacked barchart
temp_plot<-trip_age_andel_plot %>%
mutate(across(where(is.numeric), ~ . * 100))  %>%
gather(Färdmedel,Andel,-Ålder,factor_key=TRUE) %>%
mutate(Andel=round(Andel))
age_plot <- ggplot(data = temp_plot, aes(fill =forcats::fct_rev(factor(Färdmedel,level = ordning_fardmedel)), x = Andel, y = forcats::fct_rev(factor(Ålder)),label =Andel))  +
theme(panel.background = element_blank(),
legend.position="bottom") +
# scale_y_discrete(limits = rev(unique(temp_plot$Ålder))) +
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label=ifelse(Andel>3,Andel," ")),size = 3, position = position_fill(vjust = 0.5)) + #etiketter
scale_fill_manual(guide=guide_legend(reverse=T),values=palett) + #färger
labs(x="Andel",y="Ålder",fill="Färdmedel") +
scale_x_continuous(labels = scales::percent)
if(nrow(alder_lagt_underlag > 0)){
age_plot <- age_plot +
labs(caption = "* Baseras på särskilt lågt antal respondenter.")
}
age_plot
avvikande_vanligaste_färdmedel
kvinna_storst
*kvinna_storst*
paste("*",kvinna_storst,"*")
paste("*",tolower(kvinna_storst),"*")
mest_frekvent_fardmedel_km_varde
View(temp_plot)
#Lägger till avståndsklass per resa
rvu_avs <- rvu %>%
filter(!is.na(avstand)&avstand>0) %>%
rename(Färdmedel = fardmedel.kat) %>%
select(respondentid,Färdmedel,avstand,Omrade,Omrade_kod)
rvu_avs$km <- round(rvu_avs$avstand/1000)
rvu_avs <- rvu_avs %>%
group_by(kmklass = cut(km, breaks = c(0, 2, 5, 10, 25, 50, 1000)))
#rvu_avs$kmklass<-ifelse(rvu_avs$km>32/4,32,rvu_avs$km*4)
rvu_avs$antal<-1
#Aggregerar avståndsklasser
agg_rvu_avs <-
aggregate(rvu_avs[,c('antal'), drop=FALSE], by=list(
avstand = rvu_avs$kmklass,
fard = rvu_avs$Färdmedel
),
FUN = sum)
agg_rvu_avs<-spread(agg_rvu_avs,key=fard,value=antal)
agg_rvu_avs[is.na(agg_rvu_avs)]<-0
agg_rvu_avs$Totalt<-agg_rvu_avs$Bil+agg_rvu_avs$Buss+agg_rvu_avs$Tåg+agg_rvu_avs$Cykel+agg_rvu_avs$Gång
agg_rvu_avs <- agg_rvu_avs[c("avstand","Bil","Tåg","Buss","Cykel","Gång","Totalt")]
agg_rvu_avs <- mutate(agg_rvu_avs,avstand = c(
"0–2",
"2–5",
"5–10",
"10–25",
"25–50",
"50+"
))
#Skapar ett procentuellt stapeldiagram
temp_plot <- agg_rvu_avs %>%
mutate(across(where(is.numeric) & !Totalt, ~ 100*. / Totalt)) %>%
select(-Totalt) %>%
gather(Färdmedel,Andel,Bil:Gång,factor_key=TRUE) %>%
mutate(Andel=round(Andel))
avstand_plot <- ggplot(data = temp_plot, aes(fill =forcats::fct_rev(factor(Färdmedel,level = ordning_fardmedel)), y = Andel, x = factor(avstand,level = agg_rvu_avs$avstand),label =Andel)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(data=temp_plot[temp_plot$Andel>3,],size = 3, position = position_fill(vjust = 0.5)) + #etiketter
scale_fill_manual(values=palett[-(1:1)]) + #färger
labs(y="Andel",x="Avstånd (km)",fill="Färdmedel") +
scale_y_continuous(labels = scales::percent)
avstand_plot
View(agg_rvu_avs)
max_car <- get_trip(temp_plot, "max", "Andel")
max_train  <- which.max(subset(temp_plot, Färdmedel=="Tåg")$Andel)
train <- temp_plot[temp_plot$Färdmedel=="Tåg",]
max_train <- train[which.max(train$Andel),]
bike <- temp_plot[temp_plot$Färdmedel=="Cykel",]
max_bike <- bike[which.max(bike$Andel),]
max_car
get_trip(rvu_avs, "max", "Andel")
rvu_avs
agg_rvu_avs
get_trip(agg_rvu_avs, "max", "Andel")
agg_rvu_avs
temp_plot
trip_purpose_mode_andel_plot
view(trip_purpose_mode_andel_plot)
agg_rvu_avs
agg_rvu_avs
agg_rvu_avs_df <- agg_rvu_avs %>%
as.data.frame() %>%
`rownames<-`(.[,1])
View(agg_rvu_avs_df)
agg_rvu_avs_df <- agg_rvu_avs %>%
as.data.frame() %>%
`rownames<-`(.[,1]) %>% #skapar indexkolumn
select(!(avstand))
View(agg_rvu_avs_df)
agg_rvu_avs_df <- agg_rvu_avs %>%
as.data.frame() %>%
`rownames<-`(.[,1]) %>% #skapar indexkolumn
select(!(avstand)) %>%
mutate(Kollektivtrafik = Buss + Tåg)
mest_bil_alder <- rownames(agg_rvu_avs_df)[which.max(agg_rvu_avs_df$Bil)]
mest_koll_alder <- rownames(agg_rvu_avs_df)[which.max(agg_rvu_avs_df$Kollektivtrafik)]
mest_cykel_alder <- rownames(agg_rvu_avs_df)[which.max(agg_rvu_avs_df$Cykel)]
mest_bil_alder
agg_rvu_avs_df <- agg_rvu_avs %>%
as.data.frame() %>%
`rownames<-`(.[,1]) %>% #skapar indexkolumn
select(!(avstand)) %>%
mutate(Kollektivtrafik = Buss + Tåg)
mest_bil_avstand <- rownames(agg_rvu_avs_df)[which.max(agg_rvu_avs_df$Bil)]
mest_koll_avstand <- rownames(agg_rvu_avs_df)[which.max(agg_rvu_avs_df$Kollektivtrafik)]
mest_cykel_avstand <- rownames(agg_rvu_avs_df)[which.max(agg_rvu_avs_df$Cykel)]
agg_rvu_avs_df <- agg_rvu_avs %>%
as.data.frame() %>%
`rownames<-`(.[,1]) %>% #skapar indexkolumn
select(!(avstand))
mest_bil_avstand <- rownames(agg_rvu_avs_df)[which.max(agg_rvu_avs_df$Bil)]
mest_tag_avstand <- rownames(agg_rvu_avs_df)[which.max(agg_rvu_avs_df$Tag)]
mest_cykel_avstand <- rownames(agg_rvu_avs_df)[which.max(agg_rvu_avs_df$Cykel)]
utpendling <- rvu %>%
select(start_kommun_namn, stop_kommun_namn) %>%
filter(!is.na(start_kommun_namn)) %>%
filter(!is.na(stop_kommun_namn)) %>%
#filter(start_kommun_namn %in% rapportomrade) %>%
group_by(stop_kommun_namn) %>%
summarize(antal = n()) %>%
ungroup()
utpendling
minsta_antal <- 6
#Skapar sammanställning av utpendling för alla resor
utpendling_kommun <- rvu %>%
select(start_kommun_namn, stop_kommun_namn) %>%
filter(!is.na(start_kommun_namn)) %>%
filter(!is.na(stop_kommun_namn)) %>%
#filter(start_kommun_namn %in% rapportomrade) %>%
group_by(stop_kommun_namn) %>%
summarize(antal = n()) %>%
ungroup()
inom_omrade <- utpendling_kommun %>%
filter(stop_kommun_namn %in% kommuner)
andel_inom <- sum(inom_omrade$antal)/sum(utpendling_kommun$antal)
#Filtrerar ut största och sorterar
utpendling_kommun <- utpendling_kommun %>%
filter(!(stop_kommun_namn %in% kommuner)) %>%
top_n(minsta_antal-1) %>%
arrange(desc(antal)) %>%
bind_rows(
utpendling_kommun %>%
filter(!(stop_kommun_namn %in% top_n(utpendling_kommun,minsta_antal-1)$stop_kommun_namn)) %>%
summarise_if(is.numeric, sum) %>%
mutate(stop_kommun_namn = "Övriga kommuner")
) %>%
mutate(perc = antal/sum(antal))
minsta_antal <- 10
#Skapar sammanställning av utpendling för alla resor
utpendling_tatort <- rvu %>%
select(start_tatort_namn, stop_tatort_namn) %>%
filter(!is.na(start_tatort_namn)) %>%
filter(!is.na(stop_tatort_namn)) %>%
#filter(start_tatort_namn %in% rapportomrade) %>%
group_by(stop_tatort_namn) %>%
summarize(antal = n()) %>%
ungroup()
inom_omrade <- utpendling_tatort #%>%
#filter(stop_tatort_namn == rapportomrade)
andel_inom <- sum(inom_omrade$antal)/sum(utpendling_tatort$antal)
#Filtrerar ut största och sorterar
utpendling_tatort <- utpendling_tatort %>%
filter(!(stop_tatort_namn %in% tatorter)) %>%
top_n(minsta_antal-1) %>%
arrange(desc(antal)) %>%
bind_rows(
utpendling_tatort %>%
filter(!(stop_tatort_namn %in% top_n(utpendling_tatort,minsta_antal-1)$stop_tatort_namn)) %>%
summarise_if(is.numeric, sum) %>%
mutate(stop_tatort_namn = "Övriga tätorter")
) %>%
mutate(perc = antal/sum(antal))
utpendling_kommun_barplot <- ggplot(utpendling_kommun, aes(factor(stop_kommun_namn, level = stop_kommun_namn), perc, fill = factor(stop_kommun_namn, level = stop_kommun_namn))) +
geom_bar(stat = "identity") +
rvu_theme() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
coord_cartesian(xlim = c(1,nrow(utpendling_kommun))) +
geom_text(aes(label=percent(perc, 1)),size = 3, position=position_dodge(width=0.9), vjust=-0.25) + #etiketter
scale_fill_manual(values=rev(palett)) +
labs(
x = "Resmål",
y = "Andel resor",
title = "Andel utpendlingsresor till andra kommuner"
)
utpendling_kommun_barplot
utpendling_tatort_barplot <- ggplot(utpendling_tatort, aes(factor(stop_tatort_namn, level = stop_tatort_namn), perc, fill = factor(stop_tatort_namn, level = stop_tatort_namn))) +
geom_bar(stat = "identity") +
rvu_theme() +
coord_cartesian(xlim = c(1,nrow(utpendling_tatort))) +
# scale_fill_manual(values=rev(palett)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
geom_text(aes(label=percent(perc, 1)),size = 3, position=position_dodge(width=0.9), vjust=-0.25) + #etiketter
labs(
x = "Resmål",
y = "Andel resor",
title = "Andel utpendlingsresor till andra tätorter"
)
utpendling_tatort_barplot
utpendling_kommun
slice(utpendling_kommun,1)
slice(utpendling_kommun,1)$stop_kommun_namn
)
slice(utpendling_kommun,1)$stop_kommun_namn
slice(utpendling_tatort,1)$stop_tatort_namn
minsta_antal <- 6
#Skapar sammanställning av utpendling för alla resor
utpendling_kommun <- rvu %>%
select(start_kommun_namn, stop_kommun_namn) %>%
filter(!is.na(start_kommun_namn)) %>%
filter(!is.na(stop_kommun_namn)) %>%
#filter(start_kommun_namn %in% rapportomrade) %>%
group_by(stop_kommun_namn) %>%
summarize(antal = n()) %>%
ungroup()
inom_omrade <- utpendling_kommun %>%
filter(stop_kommun_namn %in% kommuner)
andel_inom <- sum(inom_omrade$antal)/sum(utpendling_kommun$antal)
#Filtrerar ut största och sorterar
utpendling_kommun <- utpendling_kommun %>%
filter(!(stop_kommun_namn %in% kommuner)) %>%
top_n(minsta_antal-1) %>%
arrange(desc(antal)) %>%
bind_rows(
utpendling_kommun %>%
filter(!(stop_kommun_namn %in% top_n(utpendling_kommun,minsta_antal-1)$stop_kommun_namn)) %>%
summarise_if(is.numeric, sum) %>%
mutate(stop_kommun_namn = "Övriga kommuner")
) %>%
mutate(perc = antal/sum(antal))
#Tar fram vanligaste kommunen
storst_utpendlingskommun <- slice(utpendling_kommun,1)$stop_kommun_namn
minsta_antal <- 10
#Skapar sammanställning av utpendling för alla resor
utpendling_tatort <- rvu %>%
select(start_tatort_namn, stop_tatort_namn) %>%
filter(!is.na(start_tatort_namn)) %>%
filter(!is.na(stop_tatort_namn)) %>%
#filter(start_tatort_namn %in% rapportomrade) %>%
group_by(stop_tatort_namn) %>%
summarize(antal = n()) %>%
ungroup()
inom_omrade <- utpendling_tatort #%>%
#filter(stop_tatort_namn == rapportomrade)
andel_inom <- sum(inom_omrade$antal)/sum(utpendling_tatort$antal)
#Filtrerar ut största och sorterar
utpendling_tatort <- utpendling_tatort %>%
filter(!(stop_tatort_namn %in% tatorter)) %>%
top_n(minsta_antal-1) %>%
arrange(desc(antal)) %>%
bind_rows(
utpendling_tatort %>%
filter(!(stop_tatort_namn %in% top_n(utpendling_tatort,minsta_antal-1)$stop_tatort_namn)) %>%
summarise_if(is.numeric, sum) %>%
mutate(stop_tatort_namn = "Övriga tätorter")
) %>%
mutate(perc = antal/sum(antal))
#Tar fram vanligaste tätorten
storst_utpendlingstatort <- slice(utpendling_tatort,1)$stop_tatort_namn
ifelse(storst_utpendlingstatort==storst_utpendlingskommun,", vilket också var den vanligaste kommunen.,paste( och den vanligaste kommunen för utpendling var ",storst_utpendlingskommun))
ifelse(storst_utpendlingstatort==storst_utpendlingskommun,", vilket också var den vanligaste kommunen.",paste( och den vanligaste kommunen för utpendling var ",storst_utpendlingskommun))
ifelse(storst_utpendlingstatort==storst_utpendlingskommun,", vilket också var den vanligaste kommunen.",paste0("" och den vanligaste kommunen för utpendling var ",storst_utpendlingskommun))
ifelse(storst_utpendlingstatort==storst_utpendlingskommun,", vilket också var den vanligaste kommunen.",paste0(" och den vanligaste kommunen för utpendling var ",storst_utpendlingskommun))
ifelse(storst_utpendlingstatort==storst_utpendlingskommun,", vilket också var den vanligaste kommunen.",paste0("och den vanligaste kommunen för utpendling var ",storst_utpendlingskommun))
